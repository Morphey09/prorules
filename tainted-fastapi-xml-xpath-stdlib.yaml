rules:
  - id: tainted-fastapi-xml-xpath-stdlib
    message: XPath queries are constructed dynamically on user-controlled input.
      This could lead to XPath injection if variables passed into the evaluate
      or compile commands are not properly sanitized. Xpath injection could lead
      to unauthorized access to sensitive information in XML documents.
      Thoroughly sanitize user input or use parameterized XPath queries if you
      can. The xml parsing library are safe from several known high-impact
      vulnerabilities such as external entity expansion and DTD retrieval.
      However, search queries in the XML documents are still vulnerable to XPath
      injection attacks.
    severity: WARNING
    metadata:
      likelihood: MEDIUM
      impact: MEDIUM
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-643: Improper Neutralization of Data within XPath Expressions
          ('XPath Injection')"
      display-name: XPath Injection with FastAPI
      functional-categories:
        - web::source::cookie::fastapi
        - web::source::form-data::fastapi
        - web::source::header::fastapi
        - web::source::http-body::fastapi
        - web::source::http-params::fastapi
        - web::source::url-path-params::fastapi
        - xml::sink::xml-parser::stdlib
        - xml::sink::xml-parser::stdlib2
        - xml::sink::xml-parser::stdlib3
        - xml::sink::xml-parser::xml
        - xml::sink::xml-parser::xml.etree
        - xml::sink::xpath::stdlib
        - xml::sink::xpath::stdlib2
        - xml::sink::xpath::stdlib3
        - xml::sink::xpath::xml
        - xml::sink::xpath::xml.etree
      owasp:
        - A03:2021 - Injection
      references:
        - https://cheatsheetseries.owasp.org/cheatsheets/XML_Security_Cheat_Sheet.html
        - https://docs.python.org/3/library/xml.html#xml-vulnerabilities
        - https://owasp.org/Top10/A03_2021-Injection
        - https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing
        - https://pypi.org/project/defusedxml/
      technology:
        - fastapi
        - python
        - stdlib
        - stdlib2
        - stdlib3
        - web
        - xml
        - xml.etree
        - xpath
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - XPath Injection
    languages:
      - python
    mode: taint
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - patterns:
          - pattern: |
              @$APP.$ROUTE("$ROUTESTRING", ...)
              async def $FUNC(..., $PARAM, ...):
                ...
          - metavariable-type:
              metavariable: $APP
              types:
                - fastapi.FastAPI
                - fastapi.APIRouter
          - metavariable-comparison:
              comparison: str($PARAM) not in $ROUTESTRING
          - metavariable-regex:
              metavariable: $ROUTE
              regex: ^(websocket|get|put|post|delete|options|head|patch|trace)$
          - metavariable-type:
              metavariable: $PARAM
              types:
                - str | None
                - str
                - Optional[str]
                - typing.Union[str, None]
                - list[str] | None
                - list[str]
                - typing.List[str] | None
                - typing.List[str]
                - typing.Optional[typing.List[str]]
                - typing.Union[list[str], None]
                - fastapi.Query(...)
                - typing.Annotated[...,  fastapi.Query(...)]
                - fastapi.Path(...)
                - typing.Annotated[...,  fastapi.Path(...)]
                - fastapi.Body(...)
                - typing.Annotated[...,  fastapi.Body(...)]
                - fastapi.Cookie(...)
                - typing.Annotated[...,  fastapi.Cookie(...)]
                - fastapi.Header(...)
                - typing.Annotated[...,  fastapi.Header(...)]
                - fastapi.Form(...)
                - typing.Annotated[...,  fastapi.Form(...)]
                - fastapi.File(...)
                - fastapi.UploadFile
                - typing.List[fastapi.UploadFile]
                - list[fastapi.UploadFile]
                - typing.Annotated[...,  fastapi.File(...)]
                - pydantic.BaseModel
                - typing.Annotated[..., fastapi.Cookie()]
                - fastapi.Cookie(...)
                - typing.Annotated[..., fastapi.Header()]
                - fastapi.Header(...)
          - focus-metavariable: $PARAM
      - label: FASTAPI_REQUEST
        patterns:
          - patterns:
              - pattern-either:
                  - patterns:
                      - pattern: |
                          @$APP.middleware(...)
                          async def $FUNC($FASTAPI_REQUEST, ...):
                            ...
                      - metavariable-type:
                          metavariable: $APP
                          types:
                            - fastapi.FastAPI
                            - fastapi.APIRouter
                  - patterns:
                      - pattern: |
                          def $FUNC(..., $FASTAPI_REQUEST, ...):
                            ...
                      - metavariable-type:
                          metavariable: $FASTAPI_REQUEST
                          types:
                            - fastapi.Request
                            - fastapi.requests.Request
                            - starlette.requests.Request
              - focus-metavariable: $FASTAPI_REQUEST
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FASTAPI_REQUEST.url.path
                  - pattern: $FASTAPI_REQUEST.base_url
                  - pattern: $FASTAPI_REQUEST.headers
                  - pattern: $FASTAPI_REQUEST.query_params
                  - pattern: $FASTAPI_REQUEST.cookies
                  - pattern: $FASTAPI_REQUEST.stream()
                  - pattern: $FASTAPI_REQUEST.read(...)
                  - pattern: $FASTAPI_REQUEST.form(...)
                  - pattern: $FASTAPI_REQUEST._get_form(...)
                  - pattern: $FASTAPI_REQUEST.body()
                  - pattern: $FASTAPI_REQUEST.json()
        requires: FASTAPI_REQUEST
      - patterns:
          - pattern-either:
              - patterns:
                  - pattern: |
                      @$APP.$ROUTE("$ROUTESTRING")
                      async def $FUNC(..., $PARAM, ...):
                        ...
                  - metavariable-type:
                      metavariable: $APP
                      types:
                        - fastapi.FastAPI
                        - fastapi.APIRouter
                  - metavariable-comparison:
                      comparison: str($PARAM) in $ROUTESTRING
                  - metavariable-regex:
                      metavariable: $ROUTE
                      regex: ^(websocket|get|put|post|delete|options|head|patch|trace)$
                  - metavariable-type:
                      metavariable: $PARAM
                      types:
                        - str | None
                        - str
                        - Optional[str]
                        - Union[str, None]
                        - list[str] | None
                        - list[str]
                        - Optional[List[str]]
                        - Union[list[str], None]
                  - focus-metavariable: $PARAM
      - label: FASTAPI_REQUEST
        patterns:
          - patterns:
              - pattern-either:
                  - patterns:
                      - pattern: |
                          @$APP.middleware(...)
                          async def $FUNC($FASTAPI_REQUEST, ...):
                            ...
                      - metavariable-type:
                          metavariable: $APP
                          types:
                            - fastapi.FastAPI
                            - fastapi.APIRouter
                  - patterns:
                      - pattern: |
                          def $FUNC(..., $FASTAPI_REQUEST, ...):
                            ...
                      - metavariable-type:
                          metavariable: $FASTAPI_REQUEST
                          types:
                            - fastapi.Request
                            - fastapi.requests.Request
                            - starlette.requests.Request
              - focus-metavariable: $FASTAPI_REQUEST
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FASTAPI_REQUEST.path_params
        requires: FASTAPI_REQUEST
      - label: ELEMENT_TREE_ELEMENT
        patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.Element(...)
              - pattern: xml.etree.ElementTree.fromstring(...)
              - pattern: xml.etree.ElementTree.fromstringlist(...)
              - pattern: xml.etree.ElementTree.iterparse(...)
              - pattern: xml.etree.ElementTree.parse(...)
              - pattern: xml.etree.ElementTree.SubElement(...)
              - pattern: xml.etree.ElementTree.XML(...)
              - pattern: xml.etree.ElementTree.XMLID(...)
      - label: ELEMENT_TREE_ELEMENT
        patterns:
          - pattern-either:
              - pattern: $TREE.find(...)
              - pattern: $TREE.findtext(...)
              - pattern: $TREE.findall(...)
              - pattern: $TREE.iterfind(...)
              - pattern: $TREE.iter(...)
        requires: ELEMENT_TREE_TREE
      - label: ELEMENT_TREE_TREE
        patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.ElementTree(...)
    pattern-propagators:
      - from: $DEFAULT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $DICT = { ... }
                      ...
                  - pattern-inside: |
                      $DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $DICT.get($FIELD, $DEFAULT)
                  - pattern: $DICT.setdefault($KEY, $DEFAULT)
        to: $DICT
      - from: $FROM_DICT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $TO_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $TO_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $TO_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $TO_DICT = dict(...)
                      ...
                  - pattern-inside: |
                      $FROM_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $FROM_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $FROM_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $FROM_DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $TO_DICT.update($FROM_DICT)
                  - pattern: $TO_DICT | $FROM_DICT
                  - pattern: $TO_DICT |= $FROM_DICT
        to: $TO_DICT
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $LIST = [ ... ]
                      ...
                  - pattern-inside: |
                      $LIST = list(...)
                      ...
              - pattern-either:
                  - pattern: $LIST.append($FROM)
                  - pattern: $LIST.extend($FROM)
                  - pattern: $LIST.insert($INDEX, $FROM)
        to: $LIST
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FROM.$LOG($SINK, ...)
                  - pattern: $FROM.$LOG(..., msg=$SINK, ...)
                  - pattern: $APP.logger.$LOG($SINK, ...)
              - metavariable-regex:
                  metavariable: $LOG
                  regex: ^(info|warning|error|critical|log|exception|handle)$
        to: $SINK
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $SET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $SET = set(...)
                      ...
                  - pattern-inside: |
                      $OTHERSET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $OTHERSET = set(...)
                      ...
              - pattern-either:
                  - pattern: $SET.update(..., $FROM, ...)
                  - pattern: $SET.intersection_update(..., $FROM, ...)
                  - pattern: $SET.difference_update(..., $FROM, ...)
                  - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
                  - pattern: $SET.add($FROM)
                  - pattern: $SET |= $FROM
                  - pattern: $SET &= $FROM
                  - pattern: $SET -= $FROM
                  - pattern: $SET ^= $FROM
        to: $SET
      - from: $FORM
        patterns:
          - pattern: $FORM.populate_obj($OBJ)
        to: $OBJ
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: $ELEMENT.find($SINK, ...)
              - pattern: $ELEMENT.findall($SINK, ...)
              - pattern: $ELEMENT.findtext($SINK, ...)
              - pattern: $ELEMENT.iterfind($SINK, ...)
              - pattern: $ELEMENT.find(..., match=$SINK, ...)
              - pattern: $ELEMENT.findall(..., match=$SINK, ...)
              - pattern: $ELEMENT.findtext(..., match=$SINK, ...)
              - pattern: $ELEMENT.iterfind(..., match=$SINK, ...)
        requires: __SOURCE__ and (ELEMENT_TREE_ELEMENT or ELEMENT_TREE_TREE)
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: int(...)
              - pattern: bool(...)
              - pattern: float(...)
              - pattern: complex(...)
              - pattern: oct(...)
              - pattern: hex(...)
              - pattern: bin(...)
              - pattern: round(...)
              - pattern: id(...)
              - pattern: hash(...)
              - pattern: len(...)
              - pattern: type(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $DICT[$KEY]
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE for ... in ...}
                  ...
              - pattern-inside: |
                  $DICT.get($KEY, $DEFAULT)
                  ...
              - pattern-inside: |
                  $DICT = { }
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE, ... }
                  ...
              - pattern-inside: |
                  $DICT = dict(...)
                  ...
          - pattern-either:
              - pattern: $DICT.clear()
              - pattern: $DICT.len()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $LIST = [ ... ]
                  ...
              - pattern-inside: |
                  $LIST = list(...)
                  ...
          - pattern-either:
              - pattern: $LIST.clear()
              - pattern: $LIST.count(...)
              - pattern: $LIST.index(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.len()
              - pattern: $SET.clear()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = { $ITEM for ... in ...}
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
              - pattern-inside: |
                  $SET = frozenset(...)
                  ...
              - pattern-inside: |
                  $OTHERSET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $OTHERSET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.isdisjoint($OTHERSET)
              - pattern: $SET.difference($OTHERSET)
              - pattern: $SET.issubset($OTHERSET)
              - pattern: $SET < $OTHERSET
              - pattern: $SET <= $OTHERSET
              - pattern: $SET.issuperset($OTHERSET)
              - pattern: $SET > $OTHERSET
              - pattern: $SET >= $OTHERSET
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $TUPLE = ( $ITEM, ... )
                  ...
              - pattern-inside: |
                  $TUPLE = $ITEM, ...
                  ...
              - pattern-inside: |
                  $TUPLE = tuple(...)
                  ...
          - pattern-either:
              - pattern: $TUPLE.len()
      - pattern: django.shortcuts.get_object_or_404(...)
      - pattern: django.shortcuts.get_list_or_404(...)

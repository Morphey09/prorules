rules:
  - id: tainted-regex-stdlib-django
    message: The regular expression identified appears vulnerable to Regular
      Expression Denial of Service (ReDoS) through catastrophic backtracking. If
      the input is attacker controllable, this vulnerability can lead to systems
      being non-responsive or may crash due to ReDoS. Where possible, re-write
      the regex so as not to leverage backtracking or use a library that offers
      default protection against ReDoS.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-1333: Inefficient Regular Expression Complexity"
      display-name: Regular expression Denial of Service
      functional-categories:
        - regex::sink::regex::libxml2
        - regex::sink::regex::re
        - regex::sink::regex::regex
        - regex::sink::regex::stdlib
        - regex::sink::regex::stdlib2
        - regex::sink::regex::stdlib3
        - web::source::cookie::django
        - web::source::cookie::django_allauth
        - web::source::cookie::django_channels
        - web::source::cookie::django_rest_frameworkapi
        - web::source::form-data::django
        - web::source::form-data::django_allauth
        - web::source::form-data::django_channels
        - web::source::form-data::django_rest_frameworkapi
        - web::source::header::django
        - web::source::header::django_allauth
        - web::source::header::django_channels
        - web::source::header::django_rest_frameworkapi
        - web::source::http-body::django
        - web::source::http-body::django_allauth
        - web::source::http-body::django_channels
        - web::source::http-body::django_rest_frameworkapi
        - web::source::http-params::django
        - web::source::http-params::django_allauth
        - web::source::http-params::django_channels
        - web::source::http-params::django_rest_frameworkapi
        - web::source::url-path-params::django
        - web::source::url-path-params::django_allauth
        - web::source::url-path-params::django_channels
        - web::source::url-path-params::django_rest_frameworkapi
      references:
        - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
        - https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS
        - https://www.regular-expressions.info/catastrophic.html
      technology:
        - django
        - django.views
        - django.views.generic
        - django_allauth
        - django_channels
        - django_rest_frameworkapi
        - libxml2
        - re
        - regex
        - stdlib
        - stdlib2
        - stdlib3
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Denial-of-Service (DoS)
    languages:
      - python
    mode: taint
    min-version: 1.81.0
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      class $CLS(..., django.views.View, ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.base.View, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.base.TemplateView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.base.RedirectView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.detail.DetailView,
                      ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.list.ListView, ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.edit.FormView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.CreateView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.UpdateView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.DeleteView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.ArchiveIndexView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.YearArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.MonthArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.WeekArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.DayArchiveView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.TodayArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.DateDetailView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.base.ContextMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.base.TemplateResponseMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.detail.SingleObjectMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.detail.SingleObjectTemplateResponseMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.list.MultipleObjectMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.list.MultipleObjectTemplateResponseMixin,
                      ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.edit.FormMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.ModelFormMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.ProcessFormView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.DeletionMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.YearMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.MonthMixin,
                      ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.dates.DayMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.WeekMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.DateMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.BaseDateListView, ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., haystack.forms.SearchForm, ...):
                        ...
                  - patterns:
                      - pattern-inside: |
                          class $CLS(...):
                              ...
                      - semgrep-internal-metavariable-name:
                          kind: django-view
                          metavariable: $CLS
              - pattern-either:
                  - pattern: self.get_year()
                  - pattern: super().get_year()
                  - pattern: self.year
                  - pattern: super().year
                  - pattern: self.get_month()
                  - pattern: super().get_month()
                  - pattern: self.month
                  - pattern: super().month
                  - pattern: self.get_day()
                  - pattern: super().get_day()
                  - pattern: self.day
                  - pattern: super().day
                  - pattern: self.get_week()
                  - pattern: super().get_week()
                  - pattern: self.week
                  - pattern: super().week
                  - pattern: self.cleaned_data
                  - pattern: super().cleaned_data
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $DJANGO_REQUEST.query_params
                  - pattern: $DJANGO_REQUEST.stream
                  - pattern: $DJANGO_REQUEST.content_type
                  - pattern: $DJANGO_REQUEST.data
                  - pattern: $DJANGO_REQUEST.user_agent_string
                  - pattern: $DJANGO_REQUEST.user_agent
                  - pattern: $DJANGO_REQUEST.body
                  - pattern: $DJANGO_REQUEST.headers
                  - pattern: $DJANGO_REQUEST.path
                  - pattern: $DJANGO_REQUEST.path_info
                  - patterns:
                      - pattern: $DJANGO_REQUEST.META
                      - pattern-not: $DJANGO_REQUEST.META.CONTENT_LENGTH
                      - pattern-not: $DJANGO_REQUEST.META.CONTENT_TYPE
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT_ENCODING
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT_LANGUAGE
                      - pattern-not: $DJANGO_REQUEST.META.REMOTE_ADDR
                      - pattern-not: $DJANGO_REQUEST.META.REQUEST_METHOD
                      - pattern-not: $DJANGO_REQUEST.META.SERVER_PORT
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_X_FORWARDED_FOR
                      - pattern-not: $DJANGO_REQUEST.META.get("CONTENT_LENGTH")
                      - pattern-not: $DJANGO_REQUEST.META.get("CONTENT_TYPE")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT_ENCODING")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT_LANGUAGE")
                      - pattern-not: $DJANGO_REQUEST.META.get("REMOTE_ADDR")
                      - pattern-not: $DJANGO_REQUEST.META.get("REQUEST_METHOD")
                      - pattern-not: $DJANGO_REQUEST.META.get("SERVER_PORT")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_X_FORWARDED_FOR")
                  - pattern: $DJANGO_REQUEST.REQUEST
                  - pattern: $DJANGO_REQUEST.GET
                  - pattern: $DJANGO_REQUEST.POST
                  - pattern: $DJANGO_REQUEST.FILES
                  - pattern: $DJANGO_REQUEST.DATA
                  - pattern: $DJANGO_REQUEST.QUERY_PARAMS
                  - pattern: $DJANGO_REQUEST.COOKIES
                  - pattern: $DJANGO_REQUEST.get_host()
                  - pattern: $DJANGO_REQUEST.get_full_path(...)
                  - pattern: $DJANGO_REQUEST.get_full_path_info(...)
                  - pattern: $DJANGO_REQUEST.get_raw_uri(...)
                  - pattern: $DJANGO_REQUEST.encoding(...)
                  - pattern: $DJANGO_REQUEST.body(...)
                  - pattern: $DJANGO_REQUEST.read(...)
                  - pattern: $DJANGO_REQUEST.readline()
                  - pattern: $DJANGO_REQUEST.readlines()
                  - pattern: $DJANGO_REQUEST.get_signed_cookie(...)
        requires: DJANGO_REQUEST
      - label: DJANGO_REQUEST
        patterns:
          - patterns:
              - pattern-either:
                  - patterns:
                      - pattern: |
                          @rest_framework.decorators.api_view(...)
                          def $FUNC($DJANGO_REQUEST, ...):
                            ...
                      - focus-metavariable: $DJANGO_REQUEST
                  - patterns:
                      - pattern: |
                          class $CLS(..., $PARENT_CLASS, ...):
                              ...
                              def $FUNC(self, $DJANGO_REQUEST, ...):
                                ...
                      - metavariable-pattern:
                          metavariable: $PARENT_CLASS
                          patterns:
                            - pattern-either:
                                - pattern: rest_framework.views.APIView
                                - pattern: rest_framework.generics.CreateAPIView
                                - pattern: rest_framework.generics.DestroyAPIView
                                - pattern: rest_framework.generics.GenericAPIView
                                - pattern: rest_framework.generics.ListAPIView
                                - pattern: rest_framework.generics.ListCreateAPIView
                                - pattern: rest_framework.generics.RetrieveAPIView
                                - pattern: rest_framework.generics.RetrieveDestroyAPIView
                                - pattern: rest_framework.generics.RetrieveUpdateAPIView
                                - pattern: rest_framework.generics.RetrieveUpdateDestroyAPIView
                                - pattern: rest_framework.generics.UpdateAPIView
                                - pattern: rest_framework.viewsets.GenericViewSet
                                - pattern: rest_framework.viewsets.ModelViewSet
                                - pattern: rest_framework.viewsets.ReadOnlyModelViewSet
                                - pattern: rest_framework.viewsets.ViewSet
                                - pattern: rest_framework.viewsets.ViewSetMixin
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: get|post|put|patch|delete|head|options|dispatch|initial|throttled|retrieve|update|partial_update|destroy|list|create
                      - focus-metavariable: $DJANGO_REQUEST
                  - patterns:
                      - pattern-either:
                          - pattern-inside: |
                              class $CLS(..., django.views.View, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(..., django.views.generic.base.View,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.base.TemplateView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.base.RedirectView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.detail.DetailView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.list.ListView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.FormView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.CreateView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.UpdateView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.DeleteView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.ArchiveIndexView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.YearArchiveView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.MonthArchiveView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.WeekArchiveView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.DayArchiveView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.TodayArchiveView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.DateDetailView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.base.ContextMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.base.TemplateResponseMixin,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.detail.SingleObjectMixin,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.detail.SingleObjectTemplateResponseMixin,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.list.MultipleObjectMixin,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.list.MultipleObjectTemplateResponseMixin,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.FormMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.ModelFormMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.ProcessFormView, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.edit.DeletionMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.YearMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.MonthMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.DayMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.WeekMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.DateMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              django.views.generic.dates.BaseDateListView, ...):
                                ...
                          - pattern-inside: |
                              class $CLS(..., haystack.forms.SearchForm, ...):
                                ...
                          - patterns:
                              - pattern-inside: |
                                  class $CLS(...):
                                      ...
                              - semgrep-internal-metavariable-name:
                                  kind: django-view
                                  metavariable: $CLS
                      - pattern-either:
                          - patterns:
                              - pattern: |
                                  def $FUNC($SELF, $DJANGO_REQUEST, ...):
                                    ...
                              - metavariable-regex:
                                  metavariable: $FUNC
                                  regex: ^(setup|dispatch|http_method_not_allowed|options|get|post|delete|head|put|patch)$
                              - focus-metavariable: $DJANGO_REQUEST
                          - pattern: self.request
                  - patterns:
                      - pattern: |
                          def $VIEW($DJANGO_REQUEST, ...):
                            ...
                      - semgrep-internal-metavariable-name:
                          kind: django-view
                          metavariable: $VIEW
                      - focus-metavariable: $DJANGO_REQUEST
                  - patterns:
                      - pattern-either:
                          - pattern-inside: >
                              class $CLS(..., rest_framework.viewsets.ViewSet,
                              ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              rest_framework.viewsets.ViewSetMixin, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              rest_framework.viewsets.GenericViewSet, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              rest_framework.viewsets.ModelViewSet, ...):
                                ...
                          - pattern-inside: >
                              class $CLS(...,
                              rest_framework.viewsets.ReadOnlyModelViewSet,
                              ...):
                                ...
                      - pattern-either:
                          - patterns:
                              - pattern: |
                                  def $FUNC($SELF, $DJANGO_REQUEST, ...):
                                    ...
                              - metavariable-regex:
                                  metavariable: $FUNC
                                  regex: ^(list|create|retrieve|update|partial_update|destroy)$
                              - focus-metavariable: $DJANGO_REQUEST
                          - patterns:
                              - pattern: |
                                  @rest_framework.decorators.action(...)
                                  def $FUNC($SELF, $DJANGO_REQUEST, ...):
                                    ...
                              - focus-metavariable: $DJANGO_REQUEST
                          - pattern: self.request
      - patterns:
          - pattern: |
              def $VIEW($DJANGO_REQUEST, ..., $PARAM, ...):
                ...
          - semgrep-internal-metavariable-name:
              kind: django-view
              metavariable: $VIEW
          - focus-metavariable: $PARAM
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $DJANGO_FORM.cleaned_data
        requires: DJANGO_FORM
      - label: DJANGO_FORM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      class $CLS(..., django.views.View, ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.base.View, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.base.TemplateView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.base.RedirectView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.detail.DetailView,
                      ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.list.ListView, ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.edit.FormView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.CreateView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.UpdateView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.DeleteView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.ArchiveIndexView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.YearArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.MonthArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.WeekArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.DayArchiveView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.TodayArchiveView, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.DateDetailView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.base.ContextMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.base.TemplateResponseMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.detail.SingleObjectMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.detail.SingleObjectTemplateResponseMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.list.MultipleObjectMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.list.MultipleObjectTemplateResponseMixin,
                      ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.edit.FormMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.ModelFormMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.ProcessFormView,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.edit.DeletionMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.YearMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.MonthMixin,
                      ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., django.views.generic.dates.DayMixin, ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.WeekMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(..., django.views.generic.dates.DateMixin,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CLS(...,
                      django.views.generic.dates.BaseDateListView, ...):
                        ...
                  - pattern-inside: |
                      class $CLS(..., haystack.forms.SearchForm, ...):
                        ...
                  - patterns:
                      - pattern-inside: |
                          class $CLS(...):
                              ...
                      - semgrep-internal-metavariable-name:
                          kind: django-view
                          metavariable: $CLS
              - pattern-either:
                  - patterns:
                      - pattern: |
                          def $FUNC($SELF, $FORM, ...):
                            ...
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: ^(form_valid|form_invalid)$
                      - focus-metavariable: $FORM
                  - pattern-either:
                      - pattern: self.get_form_kwargs()
                      - pattern: super().get_form_kwargs()
                      - pattern: self.get_form()
                      - pattern: super().get_form()
      - pattern-either:
          - patterns:
              - pattern-inside: |
                  class $LOGINFORM(..., allauth.account.forms.LoginForm, ...):
                    ...
              - pattern-inside: |
                  def login(self, *$ARGS, **$KWARGS):
                    ...
              - pattern-either:
                  - pattern: $ARGS
                  - pattern: $KWARGS
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      class $FORM(..., allauth.account.forms.AddEmailForm, ...):
                        ...
                  - pattern-inside: >
                      class $FORM(..., allauth.account.forms.ChangePasswordForm,
                      ...):
                        ...
                  - pattern-inside: >
                      class $FORM(..., allauth.account.forms.SetPasswordForm,
                      ...):
                        ...
                  - pattern-inside: >
                      class $FORM(..., allauth.account.forms.ResetPasswordForm,
                      ...):
                        ...
                  - pattern-inside: >
                      class $FORM(...,
                      allauth.account.forms.ResetPasswordKeyForm, ...):
                        ...
                  - pattern-inside: >
                      class $FORM(..., allauth.socialaccount.forms.SignupForm,
                      ...):
                        ...
                  - pattern-inside: >
                      class $FORM(...,
                      allauth.socialaccount.forms.DisconectForm, ...):
                        ...
              - pattern-inside: |
                  def save(self, $DJANGO_REQUEST):
                    ...
              - pattern-either:
                  - pattern: self.request
                  - pattern: $DJANGO_REQUEST.query_params
                  - pattern: $DJANGO_REQUEST.stream
                  - pattern: $DJANGO_REQUEST.content_type
                  - pattern: $DJANGO_REQUEST.data
                  - pattern: $DJANGO_REQUEST.user_agent_string
                  - pattern: $DJANGO_REQUEST.user_agent
                  - pattern: $DJANGO_REQUEST.body
                  - pattern: $DJANGO_REQUEST.headers
                  - pattern: $DJANGO_REQUEST.path
                  - pattern: $DJANGO_REQUEST.path_info
                  - patterns:
                      - pattern: $DJANGO_REQUEST.META
                      - pattern-not: $DJANGO_REQUEST.META.CONTENT_LENGTH
                      - pattern-not: $DJANGO_REQUEST.META.CONTENT_TYPE
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT_ENCODING
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT_LANGUAGE
                      - pattern-not: $DJANGO_REQUEST.META.REMOTE_ADDR
                      - pattern-not: $DJANGO_REQUEST.META.REQUEST_METHOD
                      - pattern-not: $DJANGO_REQUEST.META.SERVER_PORT
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_X_FORWARDED_FOR
                      - pattern-not: $DJANGO_REQUEST.META.get("CONTENT_LENGTH")
                      - pattern-not: $DJANGO_REQUEST.META.get("CONTENT_TYPE")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT_ENCODING")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT_LANGUAGE")
                      - pattern-not: $DJANGO_REQUEST.META.get("REMOTE_ADDR")
                      - pattern-not: $DJANGO_REQUEST.META.get("REQUEST_METHOD")
                      - pattern-not: $DJANGO_REQUEST.META.get("SERVER_PORT")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_X_FORWARDED_FOR")
                  - pattern: $DJANGO_REQUEST.REQUEST
                  - pattern: $DJANGO_REQUEST.GET
                  - pattern: $DJANGO_REQUEST.POST
                  - pattern: $DJANGO_REQUEST.FILES
                  - pattern: $DJANGO_REQUEST.DATA
                  - pattern: $DJANGO_REQUEST.QUERY_PARAMS
                  - pattern: $DJANGO_REQUEST.COOKIES
                  - pattern: $DJANGO_REQUEST.get_host()
                  - pattern: $DJANGO_REQUEST.get_full_path(...)
                  - pattern: $DJANGO_REQUEST.get_full_path_info(...)
                  - pattern: $DJANGO_REQUEST.get_raw_uri(...)
                  - pattern: $DJANGO_REQUEST.encoding(...)
                  - pattern: $DJANGO_REQUEST.body(...)
                  - pattern: $DJANGO_REQUEST.read(...)
                  - pattern: $DJANGO_REQUEST.readline()
                  - pattern: $DJANGO_REQUEST.readlines()
                  - pattern: $DJANGO_REQUEST.get_signed_cookie(...)
          - patterns:
              - pattern-either:
                  - patterns:
                      - pattern-inside: >
                          class $ADAPTER (...,
                          allauth.account.adapter.DefaultAccountAdapter, ...):
                            ...
                      - pattern-inside: |
                          def $FUNC(self, $DJANGO_REQUEST, ...):
                            ...
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: ^(add_message|authenticate|confirm_email|get_email_confirmation_url|get_login_redirect_url|get_logout_redirect_url|get_password_change_redirect_url|is_email_verified|is_open_for_signup|new_user|populate_username|save_user)$
                  - patterns:
                      - pattern-inside: >
                          class $ADAPTER (...,
                          allauth.socialaccount.adapter.DefaultSocialAccountAdapter,
                          ...):
                            ...
                      - pattern-inside: |
                          def $FUNC(self, $DJANGO_REQUEST, ...):
                            ...
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: ^(get_connect_redirect_url|get_provider|is_open_for_signup|list_apps|new_user|on_authentication_error|populate_user|pre_social_login|save_user)$
              - pattern-either:
                  - pattern: $DJANGO_REQUEST.query_params
                  - pattern: $DJANGO_REQUEST.stream
                  - pattern: $DJANGO_REQUEST.content_type
                  - pattern: $DJANGO_REQUEST.data
                  - pattern: $DJANGO_REQUEST.user_agent_string
                  - pattern: $DJANGO_REQUEST.user_agent
                  - pattern: $DJANGO_REQUEST.body
                  - pattern: $DJANGO_REQUEST.headers
                  - pattern: $DJANGO_REQUEST.path
                  - pattern: $DJANGO_REQUEST.path_info
                  - patterns:
                      - pattern: $DJANGO_REQUEST.META
                      - pattern-not: $DJANGO_REQUEST.META.CONTENT_LENGTH
                      - pattern-not: $DJANGO_REQUEST.META.CONTENT_TYPE
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT_ENCODING
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_ACCEPT_LANGUAGE
                      - pattern-not: $DJANGO_REQUEST.META.REMOTE_ADDR
                      - pattern-not: $DJANGO_REQUEST.META.REQUEST_METHOD
                      - pattern-not: $DJANGO_REQUEST.META.SERVER_PORT
                      - pattern-not: $DJANGO_REQUEST.META.HTTP_X_FORWARDED_FOR
                      - pattern-not: $DJANGO_REQUEST.META.get("CONTENT_LENGTH")
                      - pattern-not: $DJANGO_REQUEST.META.get("CONTENT_TYPE")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT_ENCODING")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_ACCEPT_LANGUAGE")
                      - pattern-not: $DJANGO_REQUEST.META.get("REMOTE_ADDR")
                      - pattern-not: $DJANGO_REQUEST.META.get("REQUEST_METHOD")
                      - pattern-not: $DJANGO_REQUEST.META.get("SERVER_PORT")
                      - pattern-not: $DJANGO_REQUEST.META.get("HTTP_X_FORWARDED_FOR")
                  - pattern: $DJANGO_REQUEST.REQUEST
                  - pattern: $DJANGO_REQUEST.GET
                  - pattern: $DJANGO_REQUEST.POST
                  - pattern: $DJANGO_REQUEST.FILES
                  - pattern: $DJANGO_REQUEST.DATA
                  - pattern: $DJANGO_REQUEST.QUERY_PARAMS
                  - pattern: $DJANGO_REQUEST.COOKIES
                  - pattern: $DJANGO_REQUEST.get_host()
                  - pattern: $DJANGO_REQUEST.get_full_path(...)
                  - pattern: $DJANGO_REQUEST.get_full_path_info(...)
                  - pattern: $DJANGO_REQUEST.get_raw_uri(...)
                  - pattern: $DJANGO_REQUEST.encoding(...)
                  - pattern: $DJANGO_REQUEST.body(...)
                  - pattern: $DJANGO_REQUEST.read(...)
                  - pattern: $DJANGO_REQUEST.readline()
                  - pattern: $DJANGO_REQUEST.readlines()
                  - pattern: $DJANGO_REQUEST.get_signed_cookie(...)
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: >
                      class $CONSUMER(...,
                      channels.generic.websocket.WebsocketConsumer, ...):
                        ...
                  - pattern-inside: >
                      class $CONSUMER(...,
                      channels.generic.websocket.AsyncWebsocketConsumer, ...):
                        ...
                  - pattern-inside: >
                      class $CONSUMER(...,
                      channels.generic.websocket.JsonWebsocketConsumer, ...):
                        ...
                  - pattern-inside: >
                      class $CONSUMER(...,
                      channels.generic.websocket.AsyncJsonWebsocketConsumer,
                      ...):
                        ...
                  - pattern-inside: >
                      class $CONSUMER(...,
                      channels.generic.http.AsyncHttpConsumer, ...):
                        ...
              - pattern-either:
                  - patterns:
                      - pattern-inside: |
                          def $FUNC(self, ...):
                            ...
                      - pattern: self.scope["$SCOPE_ATTRIBUTE"]
                      - metavariable-regex:
                          metavariable: $SCOPE_ATTRIBUTE
                          regex: ^(url_route|headers|path|raw_path|root_path|query_string)$
                  - patterns:
                      - pattern-inside: |
                          def $FUNC(self, ..., $ARG, ...):
                            ...
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: ^(receive|receive_json|handle)$
                      - pattern: $ARG
      - label: REGEX_PATTERN
        patterns:
          - pattern-either:
              - pattern: regex._compile(...)
              - pattern: regex.compile(...)
              - pattern: re.compile(...)
              - pattern: re.Pattern(...)
              - pattern: regex.Pattern(...)
              - pattern: regex.finditer(...)
              - pattern: regex.splititer(...)
        requires: __SOURCE__
    pattern-propagators:
      - from: $DEFAULT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $DICT = { ... }
                      ...
                  - pattern-inside: |
                      $DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $DICT.get($FIELD, $DEFAULT)
                  - pattern: $DICT.setdefault($KEY, $DEFAULT)
        to: $DICT
      - from: $FROM_DICT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $TO_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $TO_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $TO_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $TO_DICT = dict(...)
                      ...
                  - pattern-inside: |
                      $FROM_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $FROM_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $FROM_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $FROM_DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $TO_DICT.update($FROM_DICT)
                  - pattern: $TO_DICT | $FROM_DICT
                  - pattern: $TO_DICT |= $FROM_DICT
        to: $TO_DICT
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $LIST = [ ... ]
                      ...
                  - pattern-inside: |
                      $LIST = list(...)
                      ...
              - pattern-either:
                  - pattern: $LIST.append($FROM)
                  - pattern: $LIST.extend($FROM)
                  - pattern: $LIST.insert($INDEX, $FROM)
        to: $LIST
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FROM.$LOG($SINK, ...)
                  - pattern: $FROM.$LOG(..., msg=$SINK, ...)
                  - pattern: $APP.logger.$LOG($SINK, ...)
              - metavariable-regex:
                  metavariable: $LOG
                  regex: ^(info|warning|error|critical|log|exception|handle)$
        to: $SINK
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $SET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $SET = set(...)
                      ...
                  - pattern-inside: |
                      $OTHERSET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $OTHERSET = set(...)
                      ...
              - pattern-either:
                  - pattern: $SET.update(..., $FROM, ...)
                  - pattern: $SET.intersection_update(..., $FROM, ...)
                  - pattern: $SET.difference_update(..., $FROM, ...)
                  - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
                  - pattern: $SET.add($FROM)
                  - pattern: $SET |= $FROM
                  - pattern: $SET &= $FROM
                  - pattern: $SET -= $FROM
                  - pattern: $SET ^= $FROM
        to: $SET
      - from: $FORM
        patterns:
          - pattern: $FORM.populate_obj($OBJ)
        to: $OBJ
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern-either:
                  - pattern: re.match($PATTERN, ...)
                  - pattern: re.search($PATTERN, ...)
                  - pattern: re.sub($PATTERN, ...)
                  - pattern: re.subn($PATTERN, ...)
                  - pattern: re.split($PATTERN, ...)
                  - pattern: re.findall($PATTERN, ...)
                  - pattern: re.template($PATTERN, ...)
              - pattern-either:
                  - pattern: regex.match($PATTERN, ...)
                  - pattern: regex.search($PATTERN, ...)
                  - pattern: regex.sub($PATTERN, ...)
                  - pattern: regex.subn($PATTERN, ...)
                  - pattern: regex.subf($PATTERN, ...)
                  - pattern: regex.subfn($PATTERN, ...)
                  - pattern: regex.split($PATTERN, ...)
                  - pattern: regex.findall($PATTERN, ...)
                  - pattern: regex.template($PATTERN, ...)
              - pattern-either:
                  - pattern: re.match(..., pattern=$PATTERN, ...)
                  - pattern: re.search(..., pattern=$PATTERN, ...)
                  - pattern: re.sub(..., pattern=$PATTERN, ...)
                  - pattern: re.subn(..., pattern=$PATTERN, ...)
                  - pattern: re.split(..., pattern=$PATTERN, ...)
                  - pattern: re.findall(..., pattern=$PATTERN, ...)
                  - pattern: re.template(..., pattern=$PATTERN, ...)
              - pattern-either:
                  - pattern: regex.match(..., pattern=$PATTERN, ...)
                  - pattern: regex.search(..., pattern=$PATTERN, ...)
                  - pattern: regex.sub(..., pattern=$PATTERN, ...)
                  - pattern: regex.subn(..., pattern=$PATTERN, ...)
                  - pattern: regex.subf(..., pattern=$PATTERN, ...)
                  - pattern: regex.subfn(..., pattern=$PATTERN, ...)
                  - pattern: regex.split(..., pattern=$PATTERN, ...)
                  - pattern: regex.findall(..., pattern=$PATTERN, ...)
                  - pattern: regex.template(..., pattern=$PATTERN, ...)
          - focus-metavariable: $PATTERN
        requires: __SOURCE__
      - pattern-either:
          - pattern: $PATTERN.search(...)
          - pattern: $PATTERN.match(...)
          - pattern: $PATTERN.scan(...)
          - pattern: $PATTERN.findall(...)
          - pattern: $PATTERN.sub(...)
          - pattern: $PATTERN.subf(...)
          - pattern: $PATTERN.subn(...)
          - pattern: $PATTERN.subfn(...)
          - pattern: $PATTERN.split(...)
        requires: __SOURCE__ and REGEX_PATTERN
      - pattern: libxml2.regexpCompile(...)
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: int(...)
              - pattern: bool(...)
              - pattern: float(...)
              - pattern: complex(...)
              - pattern: oct(...)
              - pattern: hex(...)
              - pattern: bin(...)
              - pattern: round(...)
              - pattern: id(...)
              - pattern: hash(...)
              - pattern: len(...)
              - pattern: type(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $DICT[$KEY]
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE for ... in ...}
                  ...
              - pattern-inside: |
                  $DICT.get($KEY, $DEFAULT)
                  ...
              - pattern-inside: |
                  $DICT = { }
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE, ... }
                  ...
              - pattern-inside: |
                  $DICT = dict(...)
                  ...
          - pattern-either:
              - pattern: $DICT.clear()
              - pattern: $DICT.len()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $LIST = [ ... ]
                  ...
              - pattern-inside: |
                  $LIST = list(...)
                  ...
          - pattern-either:
              - pattern: $LIST.clear()
              - pattern: $LIST.count(...)
              - pattern: $LIST.index(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.len()
              - pattern: $SET.clear()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = { $ITEM for ... in ...}
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
              - pattern-inside: |
                  $SET = frozenset(...)
                  ...
              - pattern-inside: |
                  $OTHERSET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $OTHERSET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.isdisjoint($OTHERSET)
              - pattern: $SET.difference($OTHERSET)
              - pattern: $SET.issubset($OTHERSET)
              - pattern: $SET < $OTHERSET
              - pattern: $SET <= $OTHERSET
              - pattern: $SET.issuperset($OTHERSET)
              - pattern: $SET > $OTHERSET
              - pattern: $SET >= $OTHERSET
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $TUPLE = ( $ITEM, ... )
                  ...
              - pattern-inside: |
                  $TUPLE = $ITEM, ...
                  ...
              - pattern-inside: |
                  $TUPLE = tuple(...)
                  ...
          - pattern-either:
              - pattern: $TUPLE.len()
      - pattern: django.shortcuts.get_object_or_404(...)
      - pattern: django.shortcuts.get_list_or_404(...)

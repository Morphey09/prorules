rules:
  - id: tainted-direct-response-express
    message: Untrusted input could be used to tamper with a web page rendering,
      which can lead to a Cross-site scripting (XSS) vulnerability. XSS
      vulnerabilities occur when untrusted input executes malicious JavaScript
      code, leading to issues such as account compromise and sensitive
      information leakage. To prevent this vulnerability, validate the user
      input, perform contextual output encoding or sanitize the input.
    severity: WARNING
    metadata:
      likelihood: MEDIUM
      impact: MEDIUM
      confidence: LOW
      category: security
      subcategory:
        - audit
      cwe:
        - "CWE-79: Improper Neutralization of Input During Web Page Generation
          ('Cross-site Scripting')"
      cwe2020-top25: true
      cwe2021-top25: true
      cwe2022-top25: true
      display-name: Cross-Site Scripting (XSS) with Express
      functional-categories:
        - web::sink::direct-response::express
        - web::sink::html-webpage::express
        - web::source::cookie::express
        - web::source::form-data::express
        - web::source::header::express
        - web::source::http-body::express
        - web::source::http-params::cherrypy
        - web::source::url-path-params::express
      owasp:
        - A03:2021 - Injection
        - A07:2017 - Cross-Site Scripting (XSS)
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      supersedes:
        - javascript.express.direct-response-write-with-header.direct-response-write-with-header
      technology:
        - express
        - nodejs
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cross-Site-Scripting (XSS)
    languages:
      - javascript
      - typescript
    mode: taint
    min-version: 1.91.0
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_functions: true
      taint_assume_safe_indexes: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: function ... ($REQ, $RES) {...}
                  - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: $REQ.query
                  - pattern: $REQ.body
                  - pattern: $REQ.cookies
                  - pattern: $REQ.headers
                  - pattern: $REQ.headersDistinct
                  - pattern: $REQ.rawHeaders
                  - pattern: $REQ.get(...)
                  - pattern: $REQ.header(...)
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                  - pattern-inside: >
                      function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                      {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: query
                  - pattern: body
                  - pattern: cookies
                  - pattern: headers
                  - pattern: headersDistinct
                  - pattern: rawHeaders
                  - pattern: get(...)
                  - pattern: header(...)
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: function ... ($REQ, $RES) {...}
                  - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: $REQ.params
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                  - pattern-inside: >
                      function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                      {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: params
      - label: FILES
        patterns:
          - pattern-either:
              - patterns:
                  - pattern-either:
                      - pattern-inside: function ... ($REQ, $RES) {...}
                      - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
                  - focus-metavariable: $REQ
                  - pattern-either:
                      - pattern: $REQ.file
                      - pattern: $REQ.files
              - patterns:
                  - pattern-either:
                      - pattern-inside: |
                          function ... ({ $REQ }: Request, $RES) {...}
                      - pattern-inside: |
                          function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                      - pattern-inside: |
                          function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                      - pattern-inside: >
                          function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                          {...}
                  - focus-metavariable: $REQ
                  - pattern-either:
                      - pattern: file
                      - pattern: files
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FILE.originalname
                  - pattern: $FILE.mimetype
                  - pattern: $FILE.buffer
        requires: FILES
      - label: CONCAT
        patterns:
          - patterns:
              - focus-metavariable: $X
              - pattern-either:
                  - pattern: "`...${$X}...`"
                  - pattern: |
                      "..." + $X
                  - pattern: $X + "..."
        requires: __SOURCE__
    pattern-sinks:
      - patterns:
          - pattern-not-inside: |
              $RES. ... .setHeader(...)
              ...
          - pattern-not-inside: |
              $RES. ... .set(...)
              ...
          - pattern-not-inside: |
              $RES. ... .header(...)
              ...
          - pattern-not-inside: |
              $RES. ... .type(...)
              ...
          - pattern-not-inside: |
              $RES. ... .writeHead($X, $Y, ...)
              ...
          - pattern-either:
              - pattern: $RES. ... .send($SINK, ...)
              - pattern: $RES. ... .end($SINK, ...)
          - focus-metavariable: $SINK
        requires: __SOURCE__ and CONCAT
      - patterns:
          - pattern-either:
              - patterns:
                  - pattern-either:
                      - pattern-inside: |
                          $RES. ... .setHeader($FIELD, $VALUE)
                          ...
                      - pattern-inside: |
                          $RES. ... .set($FIELD, $VALUE)
                          ...
                      - pattern-inside: |
                          $RES. ... .set({..., $FIELD: $VALUE, ...})
                          ...
                      - pattern-inside: |
                          $RES. ... .header($FIELD, $VALUE)
                          ...
                      - pattern-inside: |
                          $RES. ... .header({..., $FIELD: $VALUE, ...})
                          ...
                      - pattern-inside: >
                          $RES. ... .writeHead($STATUS, {..., $FIELD: $VALUE,
                          ...})

                          ...
                  - metavariable-regex:
                      metavariable: $FIELD
                      regex: .*(?i)(content\-type).*
              - pattern-inside: |
                  $RES. ... .set($VALUE)
                  ...
              - pattern-inside: |
                  $RES. ... .type($VALUE)
                  ...
          - metavariable-regex:
              metavariable: $VALUE
              regex: .*(?i)(html).*
          - pattern-either:
              - pattern: $RES. ... .send($SINK, ...)
              - pattern: $RES. ... .end($SINK, ...)
              - pattern: $RES. ... .write($SINK, ...)
          - focus-metavariable: $SINK
        requires: __SOURCE__
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: Number(...)
              - pattern: parseInt(...)
              - pattern: parseFloat(...)
              - pattern: Number.parseInt(...)
              - pattern: Number.parseFloat(...)
      - patterns:
          - pattern: $UUID.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (version|validate|v6ToV1)
          - semgrep-internal-metavariable-name:
              metavariable: $UUID
              module: uuid
      - patterns:
          - pattern: $DATE(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
                - moment
                - luxon
                - dayjs
      - patterns:
          - pattern: $DATE.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (utc|parseZone|tz)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              module: moment
      - patterns:
          - pattern: $DATE.parseJSON(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
      - patterns:
          - pattern: $DATE.DateTime.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (fromISO|fromFormat|fromObject|fromString|fromSQL|fromHTTP|fromRFC2822|fromFormatExplain|fromStringExplain|fromFormatParser)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - luxon
      - patterns:
          - pattern: $DATE.$OBJ.$FUNC(...)
          - metavariable-regex:
              metavariable: $OBJ
              regex: (LocalDate|LocalDateTime|LocalTime|OffsetDateTime|OffsetTime|ZonedDateTime|DateTimeFormatter|OffsetDate|LocalDateRange|OffsetDate)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (parse|parse1|parse2)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - "@js-joda/core"
                - "@js-joda/timezone"
                - "@js-joda/locale"
                - "@js-joda/extra"
      - pattern-either:
          - pattern: new Date(...)
          - pattern: Intl. ... .format(...)
      - by-side-effect: true
        patterns:
          - pattern: $VALIDATOR.$FUNC($SINK,...)
          - focus-metavariable: $SINK
          - semgrep-internal-metavariable-name:
              metavariable: $VALIDATOR
              module: validator
          - pattern-not: $V.contains(...)
          - pattern-not: $V.equals(...)
          - pattern-not: $V.isAfter(...)
          - pattern-not: $V.isJSON(...)
          - pattern-not: $V.isLength(...)
          - pattern-not: $V.isLowercase(...)
          - pattern-not: $V.isMultibyte(...)
          - pattern-not: $V.isStrongPassword(...)
          - pattern-not: $V.isURL(...)
          - pattern-not: $V.isUppercase(...)
          - pattern-not: $V.isVariableWidth(...)
          - pattern-not: $V.matches(...)
          - pattern-not: $V.unescape(...)
          - pattern-not: $V.trim(...)
          - pattern-not: $V.ltrim(...)
          - pattern-not: $V.rtrim(...)
      - patterns:
          - pattern: $UNDERSCORE_STRING.escapeHTML(...)
          - semgrep-internal-metavariable-name:
              metavariable: $UNDERSCORE_STRING
              module: underscore.string
      - patterns:
          - pattern: $S.sanitize(...)
          - semgrep-internal-metavariable-name:
              metavariable: $S
              modules:
                - dompurify
                - isomorphic-dompurify
      - patterns:
          - pattern: $S(...)
          - semgrep-internal-metavariable-name:
              metavariable: $S
              modules:
                - dompurify
                - isomorphic-dompurify
                - xss
                - sanitize-html
      - patterns:
          - pattern: $S.escape(...)
          - semgrep-internal-metavariable-name:
              metavariable: $S
              modules:
                - he
                - html-entities
      - patterns:
          - pattern: $S.render(...)
          - semgrep-internal-metavariable-name:
              metavariable: $S
              modules:
                - remarkable
                - template-engine
      - patterns:
          - pattern-either:
              - pattern: $RES.json(...)

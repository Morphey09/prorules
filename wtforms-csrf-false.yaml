rules:
  - id: wtforms-csrf-false
    message: "The application does not appear to verify inbound requests which can
      lead to a Cross-site request forgery (CSRF) vulnerability. If the
      application uses cookie-based authentication, an attacker can trick users
      into sending authenticated HTTP requests without their knowledge from any
      arbitrary domain they visit. To prevent this vulnerability start by
      identifying if the framework or library leveraged has built-in features or
      offers plugins for CSRF protection. CSRF tokens should be unique and
      securely random. The `Synchronizer Token` or `Double Submit Cookie`
      patterns with defense-in-depth mechanisms such as the `sameSite` cookie
      flag can help prevent CSRF. For more information, see: [Cross-site request
      forgery
      prevention](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Req\
      uest_Forgery_Prevention_Cheat_Sheet.html)"
    severity: INFO
    metadata:
      likelihood: LOW
      impact: MEDIUM
      confidence: HIGH
      category: security
      subcategory:
        - secure default
      cwe:
        - "CWE-352: Cross-Site Request Forgery (CSRF)"
      cwe2020-top25: true
      cwe2021-top25: true
      cwe2022-top25: true
      display-name: Cross-Site Request Forgery (CSRF) with WTForms
      functional-categories:
        - web::search::csrf-config::wtforms
      owasp:
        - A01:2021 - Broken Access Control
      references:
        - https://owasp.org/Top10/A01_2021-Broken_Access_Control
        - https://wtforms.readthedocs.io/en/2.3.x/meta/#module-wtforms.meta
      technology:
        - cookie
        - cookies
        - flask
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cross-Site Request Forgery (CSRF)
    languages:
      - python
    fix: "True"
    options:
      symbolic_propagation: true
    patterns:
      - patterns:
          - pattern: |
              class $FORMCLASS(wtforms.form.Form):
                  ...
                  class Meta:
                      ...
                      csrf = $FALSE
          - metavariable-regex:
              metavariable: $FALSE
              regex: ^(False)$
          - focus-metavariable: $FALSE

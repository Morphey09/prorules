rules:
  - id: flask-use-jsonify-secure-default
    message: Untrusted input could be used to tamper with a web page rendering,
      which can lead to a Cross-site scripting (XSS) vulnerability. XSS
      vulnerabilities occur when untrusted input executes malicious JavaScript
      code, leading to issues such as account compromise and sensitive
      information leakage. To prevent this vulnerability, validate the user
      input, perform contextual output encoding or sanitize the input. In Flask
      apps, it is recommended to use the `jsonify()` function instead of the
      `json.dumps()` functions. It is more convenient as it converts the JSON
      data to a Response object, using `json.dumps()` is more error prone.
      Additionally, `jsonify()` sets the correct security headers and the
      response type for JSON responses. This means the response data will never
      be interpreted by browsers as HTML or JavaScript and will be secure
      against XSS attacks.
    severity: INFO
    metadata:
      likelihood: LOW
      impact: LOW
      confidence: HIGH
      category: security
      subcategory:
        - secure default
      cwe:
        - "CWE-79: Improper Neutralization of Input During Web Page Generation
          ('Cross-site Scripting')"
      cwe2020-top25: true
      cwe2021-top25: true
      cwe2022-top25: true
      display-name: Cross-Site Scripting (XSS) with Flask
      functional-categories:
        - web::source::cookie::flask
        - web::source::form-data::flask
        - web::source::form-data::flask-wtf
        - web::source::form-data::wtforms
        - web::source::header::flask
        - web::source::http-body::flask
        - web::source::http-params::flask
        - web::source::url-path-params::flask
      owasp:
        - A03:2021 - Injection
        - A07:2017 - Cross-Site Scripting (XSS)
      references:
        - https://flask.palletsprojects.com/en/3.0.x/api/#flask.json.jsonify
        - https://flask.palletsprojects.com/en/3.0.x/web-security/#security-json
        - https://owasp.org/Top10/A03_2021-Injection
        - https://www.geeksforgeeks.org/use-jsonify-instead-of-json-dumps-in-flask/
      technology:
        - flask
        - flask-wtf
        - json
        - web
        - wtforms
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cross-Site-Scripting (XSS)
    languages:
      - python
    mode: taint
    options:
      interfile: true
      symbolic_propagation: true
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern: flask.request.$FUNC()
              - metavariable-regex:
                  metavariable: $FUNC
                  regex: ^(from_values|get_data|get_json)$
          - patterns:
              - pattern-either:
                  - pattern: flask.request.$PROPERTY
                  - pattern: flask.request.$PROPERTY[...]
                  - pattern: flask.request.$PROPERTY.get(...)
              - metavariable-regex:
                  metavariable: $PROPERTY
                  regex: ^(args|cookies|data|files|form|full_path|headers|input_stream|json|path|stream|values|view_args)$
          - patterns:
              - pattern: |
                  @$APP.$ROUTE
                  def $FUNC(..., $PARAM, ...):
                    ...
              - metavariable-regex:
                  metavariable: $ROUTE
                  regex: ^(endpoint)$
              - metavariable-type:
                  metavariable: $APP
                  types:
                    - flask.Flask
                    - flask.Blueprint
              - focus-metavariable: $PARAM
      - patterns:
          - pattern: |
              @$APP.$ROUTE(...)
              def $FUNC(..., $PARAM, ...):
                ...
          - metavariable-regex:
              metavariable: $ROUTE
              regex: ^(route|delete|get|patch|post|put)$
          - metavariable-type:
              metavariable: $APP
              types:
                - flask.Flask
                - flask.Blueprint
          - focus-metavariable: $PARAM
      - patterns:
          - pattern-inside: |
              @$APP.$ROUTE(...)
              def $FUNC(...):
                ...
          - pattern: $FORM.$FIELD.data
          - metavariable-regex:
              metavariable: $ROUTE
              regex: ^(route|delete|get|patch|post|put|endpoint)$
          - metavariable-type:
              metavariable: $FORM
              type: FlaskForm
          - metavariable-type:
              metavariable: $APP
              types:
                - flask.Flask
                - flask.Blueprint
      - label: JSON_DUMPS
        patterns:
          - pattern-either:
              - pattern: json.dumps(...)
              - pattern: flask.json.dumps(...)
              - pattern: current_app.json.dumps(...)
              - pattern: flask.json.provider.DefaultJSONProvider().dumps(...)
    pattern-propagators:
      - from: $DEFAULT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $DICT = { ... }
                      ...
                  - pattern-inside: |
                      $DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $DICT.get($FIELD, $DEFAULT)
                  - pattern: $DICT.setdefault($KEY, $DEFAULT)
        to: $DICT
      - from: $FROM_DICT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $TO_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $TO_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $TO_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $TO_DICT = dict(...)
                      ...
                  - pattern-inside: |
                      $FROM_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $FROM_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $FROM_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $FROM_DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $TO_DICT.update($FROM_DICT)
                  - pattern: $TO_DICT | $FROM_DICT
                  - pattern: $TO_DICT |= $FROM_DICT
        to: $TO_DICT
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $LIST = [ ... ]
                      ...
                  - pattern-inside: |
                      $LIST = list(...)
                      ...
              - pattern-either:
                  - pattern: $LIST.append($FROM)
                  - pattern: $LIST.extend($FROM)
                  - pattern: $LIST.insert($INDEX, $FROM)
        to: $LIST
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FROM.$LOG($SINK, ...)
                  - pattern: $FROM.$LOG(..., msg=$SINK, ...)
                  - pattern: $APP.logger.$LOG($SINK, ...)
              - metavariable-regex:
                  metavariable: $LOG
                  regex: ^(info|warning|error|critical|log|exception|handle)$
        to: $SINK
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $SET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $SET = set(...)
                      ...
                  - pattern-inside: |
                      $OTHERSET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $OTHERSET = set(...)
                      ...
              - pattern-either:
                  - pattern: $SET.update(..., $FROM, ...)
                  - pattern: $SET.intersection_update(..., $FROM, ...)
                  - pattern: $SET.difference_update(..., $FROM, ...)
                  - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
                  - pattern: $SET.add($FROM)
                  - pattern: $SET |= $FROM
                  - pattern: $SET &= $FROM
                  - pattern: $SET -= $FROM
                  - pattern: $SET ^= $FROM
        to: $SET
      - from: $FORM
        patterns:
          - pattern: $FORM.populate_obj($OBJ)
        to: $OBJ
    pattern-sinks:
      - patterns:
          - pattern-inside: |
              @$APP.$ROUTE(...)
              def $FUNC(...):
                ...
          - metavariable-type:
              metavariable: $APP
              types:
                - flask.Flask
                - flask.Blueprint
          - pattern: return $SINK
          - focus-metavariable: $SINK
        requires: __SOURCE__ and JSON_DUMPS
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: int(...)
              - pattern: bool(...)
              - pattern: float(...)
              - pattern: complex(...)
              - pattern: oct(...)
              - pattern: hex(...)
              - pattern: bin(...)
              - pattern: round(...)
              - pattern: id(...)
              - pattern: hash(...)
              - pattern: len(...)
              - pattern: type(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $DICT[$KEY]
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE for ... in ...}
                  ...
              - pattern-inside: |
                  $DICT.get($KEY, $DEFAULT)
                  ...
              - pattern-inside: |
                  $DICT = { }
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE, ... }
                  ...
              - pattern-inside: |
                  $DICT = dict(...)
                  ...
          - pattern-either:
              - pattern: $DICT.clear()
              - pattern: $DICT.len()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $LIST = [ ... ]
                  ...
              - pattern-inside: |
                  $LIST = list(...)
                  ...
          - pattern-either:
              - pattern: $LIST.clear()
              - pattern: $LIST.count(...)
              - pattern: $LIST.index(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.len()
              - pattern: $SET.clear()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = { $ITEM for ... in ...}
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
              - pattern-inside: |
                  $SET = frozenset(...)
                  ...
              - pattern-inside: |
                  $OTHERSET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $OTHERSET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.isdisjoint($OTHERSET)
              - pattern: $SET.difference($OTHERSET)
              - pattern: $SET.issubset($OTHERSET)
              - pattern: $SET < $OTHERSET
              - pattern: $SET <= $OTHERSET
              - pattern: $SET.issuperset($OTHERSET)
              - pattern: $SET > $OTHERSET
              - pattern: $SET >= $OTHERSET
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $TUPLE = ( $ITEM, ... )
                  ...
              - pattern-inside: |
                  $TUPLE = $ITEM, ...
                  ...
              - pattern-inside: |
                  $TUPLE = tuple(...)
                  ...
          - pattern-either:
              - pattern: $TUPLE.len()
      - pattern: django.shortcuts.get_object_or_404(...)
      - pattern: django.shortcuts.get_list_or_404(...)
      - pattern: $RESPONSE(..., mimetype="application/json", ...)
      - pattern: flask.templating.render_template(...)
      - pattern: flask.templating.render_template_string(...)
      - pattern: flask.render_template(...)
      - pattern: flask.render_template_string(...)
      - pattern: requests.$FUNC(...)
      - pattern: urllib.$FUNC(...)
      - pattern: urllib3.$FUNC(...)

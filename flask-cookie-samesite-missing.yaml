rules:
  - id: flask-cookie-samesite-missing
    message: "Detected a cookie options with the `SameSite` flag set to \"None\".
      This is a potential security risk that arises from the way web browsers
      manage cookies. In a typical web application, cookies are used to store
      and transmit session-related data between a client and a server. To
      enhance security, cookies can be marked with the \"SameSite\" attribute,
      which restricts their usage based on the origin of the page that set them.
      This attribute can have three values: \"Strict,\" \"Lax,\" or \"None\".
      Make sure that the choice of the `None` value is intentional and that you
      understand the potential security implications. When `SameSite` is set to
      \"Strict\", no 3rd party cookie will be sent with outgoing requests. While
      'Strict' is the most secure option, 'Lax' is a good compromise between
      security and usability and this default value is secure for most
      applications. A secure default approach would consist of creating a custom
      response class, overriding the `set_cookie` method to set this flag to
      `Lax` by default, setting the `response_class` attribute of your Flask app
      to use the custom response class, setting the flag a different value on a
      case-by-case basis only when necessary."
    severity: INFO
    metadata:
      likelihood: LOW
      impact: LOW
      confidence: HIGH
      category: security
      subcategory:
        - secure default
      cwe:
        - "CWE-1275: Sensitive Cookie with Improper SameSite Attribute"
      display-name: Improper SameSite Attribute in Cookie
      functional-categories:
        - web::search::cookie-config::flask
        - web::search::cookie-config::flask-jwt-extended
        - web::search::cookie-config::flask-login
        - web::search::cookie-config::flask-session
      owasp:
        - A01:2021 - Broken Access Control
      references:
        - https://owasp.org/Top10/A01_2021-Broken_Access_Control
        - https://web.dev/articles/samesite-cookies-explained
      technology:
        - cookie
        - cookies
        - flask
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cookie Security
    languages:
      - python
    fix: $RESP.set_cookie($...ARGS, samesite='Lax')
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
          - pattern-inside: |
              def $METHOD(..., $RESP: flask.Response, ...):
                  ...
          - pattern-inside: |
              $RESP = flask.make_response(...)
              ...
          - pattern-inside: |
              $RESP = $APP.make_response(...)
              ...
          - pattern-inside: |
              $RESP = flask.Response(...)
              ...
      - patterns:
          - pattern: $RESP.set_cookie($...ARGS)
          - pattern-not: $RESP.set_cookie(..., samesite=$VAL, ...)

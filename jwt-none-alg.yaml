rules:
  - id: jwt-none-alg
    message: Detected use of the `none` algorithm in a JWT token. The `none`
      algorithm assumes the integrity of the token has already been verified.
      This would allow a malicious actor to forge a JWT token that will
      automatically be verified. Do not explicitly use the `none` algorithm.
      Instead, use an algorithm such as `HS256`.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      display-name: Risky Cryptographic Algorithm in JWT
      functional-categories:
        - crypto::search::asymmetric-algorithm::java-jwt
      owasp:
        - A02:2021 - Cryptographic Failures
        - A03:2017 - Sensitive Data Exposure
      references:
        - https://owasp.org/Top10/A02_2021-Cryptographic_Failures
      technology:
        - jwt
        - kotlin
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cryptographic Issues
    languages:
      - kotlin
    mode: taint
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      import com.auth0.jwt.*
                      ...
                  - pattern-inside: |
                      import com.auth0.jwt.algorithms
                      ...
              - pattern: algorithms.Algorithm.none()
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      import com.auth0.jwt.algorithms.*
                      ...
                  - pattern-inside: |
                      import com.auth0.jwt.algorithms.Algorithm
                      ...
              - pattern: Algorithm.none()
    pattern-sinks:
      - pattern: $JWT.sign(...)

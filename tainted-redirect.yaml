rules:
  - id: tainted-redirect
    message: The application builds a URL using user-controlled input which can lead
      to an open redirect vulnerability. An attacker can manipulate the URL and
      redirect users to an arbitrary domain. Open redirect vulnerabilities can
      lead to issues such as Cross-site scripting (XSS) or redirecting to a
      malicious domain for activities such as phishing to capture users'
      credentials. To prevent this vulnerability perform strict input validation
      of the domain against an allowlist of approved domains. Notify a user in
      your application that they are leaving the website. Display a domain where
      they are redirected to the user. A user can then either accept or deny the
      redirect to an untrusted site.
    severity: WARNING
    metadata:
      likelihood: MEDIUM
      impact: MEDIUM
      confidence: LOW
      category: security
      subcategory:
        - audit
      cwe:
        - "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
      display-name: Open Redirect
      functional-categories:
        - web::sink::redirect::WebAPI
        - web::source::url-path-params::WebAPI
      owasp:
        - A01:2021 - Broken Access Control
      references:
        - https://owasp.org/Top10/A01_2021-Broken_Access_Control
      technology:
        - browser
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Open Redirect
    languages:
      - javascript
      - typescript
    mode: taint
    min-version: 1.91.0
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - label: LOCATION
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: window.location
                  - pattern: document.location
                  - pattern: location
                  - pattern: $THIS. ... .location
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $LOCATION.hash
                  - pattern: $LOCATION.search
                  - pattern: $LOCATION.href
                  - pattern: $LOCATION.pathname
        requires: LOCATION
      - label: CONCAT
        patterns:
          - patterns:
              - focus-metavariable: $X
              - pattern-either:
                  - pattern: "`...${$X}...`"
                  - pattern: $F + $X
              - pattern-not: "`${$X}...`"
              - pattern-not: |
                  "https://" + $X
              - pattern-not: |
                  "http://" + $X
              - pattern-not: |
                  "//" + $X
              - pattern-not: "`http://${$X}...`"
              - pattern-not: "`https://${$X}...`"
              - pattern-not: "`//${$X}...`"
              - pattern-not: $X + $F
        requires: __SOURCE__
    pattern-sinks:
      - patterns:
          - focus-metavariable: $SINK
          - pattern-either:
              - pattern: location.href = $SINK
              - pattern: $THIS. ... .location.href = $SINK
              - pattern: location.replace($SINK)
              - pattern: $THIS. ... .location.replace($SINK)
              - pattern: location = $SINK
              - pattern: $WINDOW. ... .location = $SINK
              - pattern: window.open($SINK)
              - pattern: $THIS. ... .window.open($SINK)
        requires: __SOURCE__ and not CONCAT
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: Number(...)
              - pattern: parseInt(...)
              - pattern: parseFloat(...)
              - pattern: Number.parseInt(...)
              - pattern: Number.parseFloat(...)
      - patterns:
          - pattern: $UUID.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (version|validate|v6ToV1)
          - semgrep-internal-metavariable-name:
              metavariable: $UUID
              module: uuid
      - patterns:
          - pattern: $DATE(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
                - moment
                - luxon
                - dayjs
      - patterns:
          - pattern: $DATE.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (utc|parseZone|tz)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              module: moment
      - patterns:
          - pattern: $DATE.parseJSON(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
      - patterns:
          - pattern: $DATE.DateTime.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (fromISO|fromFormat|fromObject|fromString|fromSQL|fromHTTP|fromRFC2822|fromFormatExplain|fromStringExplain|fromFormatParser)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - luxon
      - patterns:
          - pattern: $DATE.$OBJ.$FUNC(...)
          - metavariable-regex:
              metavariable: $OBJ
              regex: (LocalDate|LocalDateTime|LocalTime|OffsetDateTime|OffsetTime|ZonedDateTime|DateTimeFormatter|OffsetDate|LocalDateRange|OffsetDate)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (parse|parse1|parse2)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - "@js-joda/core"
                - "@js-joda/timezone"
                - "@js-joda/locale"
                - "@js-joda/extra"
      - pattern-either:
          - pattern: new Date(...)
          - pattern: Intl. ... .format(...)
      - by-side-effect: true
        patterns:
          - pattern: $VALIDATOR.$FUNC($SINK,...)
          - focus-metavariable: $SINK
          - semgrep-internal-metavariable-name:
              metavariable: $VALIDATOR
              module: validator
          - pattern-not: $V.contains(...)
          - pattern-not: $V.equals(...)
          - pattern-not: $V.isAfter(...)
          - pattern-not: $V.isJSON(...)
          - pattern-not: $V.isLength(...)
          - pattern-not: $V.isLowercase(...)
          - pattern-not: $V.isMultibyte(...)
          - pattern-not: $V.isStrongPassword(...)
          - pattern-not: $V.isURL(...)
          - pattern-not: $V.isUppercase(...)
          - pattern-not: $V.isVariableWidth(...)
          - pattern-not: $V.matches(...)
          - pattern-not: $V.unescape(...)
          - pattern-not: $V.trim(...)
          - pattern-not: $V.ltrim(...)
          - pattern-not: $V.rtrim(...)
      - by-side-effect: true
        patterns:
          - pattern-either:
              - pattern: $F.has($URL)
              - pattern: $F.test($URL)
          - focus-metavariable: $URL

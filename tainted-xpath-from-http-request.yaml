rules:
  - id: tainted-xpath-from-http-request
    message: Detected input from a HTTPServletRequest going into a XPath evaluate or
      compile command. This could lead to xpath injection if variables passed
      into the evaluate or compile commands are not properly sanitized. Xpath
      injection could lead to unauthorized access to sensitive information in
      XML documents. Instead, thoroughly sanitize user input or use
      parameterized xpath queries if you can.
    severity: WARNING
    metadata:
      likelihood: HIGH
      impact: MEDIUM
      confidence: MEDIUM
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-643: Improper Neutralization of Data within XPath Expressions
          ('XPath Injection')"
      functional-categories:
        - web::source::cookie::Servlet
        - web::source::http-params::Servlet
        - web::source::http-body::Servlet
        - web::source::header::Servlet
        - web::source::session-properties::Servlet
        - web::source::url-path-params::Servlet
        - web::source::form-data::Servlet
        - xml::sink::xpath::javax.xml
      owasp:
        - A03:2021 - Injection
      references:
        - https://owasp.org/www-community/attacks/XPATH_Injection
        - https://portal.securecodewarrior.com/#/learning-resources/application_security_weaknesses~2Fweb~2Fdata_handling~2Finjection~2Fxpath
      technology:
        - java
        - servlets
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - XPath Injection
    languages:
      - java
    mode: taint
    pattern-sources:
      - patterns:
          - pattern-either:
              - pattern: (HttpServletRequest $REQ).$REQFUNC(...)
              - pattern: |
                  (ServletRequest $REQ).$REQFUNC(...) 
              - patterns:
                  - pattern-inside: >
                      (javax.servlet.http.Cookie[] $COOKIES) =
                      (HttpServletRequest $REQ).getCookies(...);

                      ...

                      for (javax.servlet.http.Cookie $COOKIE: $COOKIES) {
                        ...
                      }
                  - pattern: |
                      $COOKIE.getValue(...)
              - patterns:
                  - pattern-inside: |
                      $TYPE[] $VALS = (HttpServletRequest $REQ).$GETFUNC(...);
                      ...
                  - pattern: |
                      $PARAM = $VALS[$INDEX];
          - pattern-not: |
              $REQ.getUserPrincipal() 
          - pattern-not: |
              $REQ.getSession(...) 
          - pattern-not: |
              $REQ.getAuthType(...) 
          - pattern-not: |
              $REQ.getMethod(...) 
          - pattern-not: |
              $REQ.getLocales(...) 
          - pattern-not: |
              $REQ.getLocale(...) 
          - pattern-not: |
              $REQ.isUserinRole(...) 
          - pattern-not: |
              $REQ.isRequestdSessionIdValid(...) 
          - pattern-not: |
              $REQ.isRequestedSessionIdFromUrl(...) 
          - pattern-not: |
              $REQ.getIntHeader(...) 
          - pattern-not: |
              $REQ.getDateHeader(...) 
          - pattern-not: |
              $REQ.authenticate(...) 
          - pattern-not: |
              $REQ.isUserInRole(...) 
          - pattern-not: |
              $REQ.getAttribute(...)
          - pattern-not: |
              $REQ.getAttributeNames(...)
          - pattern-not: |
              $REQ.getAuthType(...)
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: |
                  (javax.xml.xpath.XPath $XP).evaluate(...)
              - pattern: |
                  (javax.xml.xpath.XPath $XP).compile(...).evaluate(...)

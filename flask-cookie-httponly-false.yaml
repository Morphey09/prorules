rules:
  - id: flask-cookie-httponly-false
    message: Detected a cookie where the `HttpOnly` flag is either missing or
      disabled. The `HttpOnly` cookie flag instructs the browser to forbid
      client-side JavaScript to read the cookie. If JavaScript interaction is
      required, you can ignore this finding. However, set the `HttpOnly` flag to
      `true` in all other cases. If this wasn't intentional, it's recommended to
      set the HttpOnly flag to true so the cookie will not be accessible through
      client-side scripts. A secure default approach would consist of creating a
      custom response class, overriding the `set_cookie` method to set this flag
      to `True` by default, setting the `response_class` attribute of your Flask
      app to use the custom response class, setting the flag to False on a
      case-by-case basis only when necessary.
    severity: INFO
    metadata:
      likelihood: LOW
      impact: LOW
      confidence: HIGH
      category: security
      subcategory:
        - secure default
      cwe:
        - "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"
      display-name: Missing HttpOnly Flag in Cookie
      functional-categories:
        - web::search::cookie-config::flask
        - web::search::cookie-config::flask-jwt-extended
        - web::search::cookie-config::flask-login
        - web::search::cookie-config::flask-session
      owasp:
        - A05:2021 - Security Misconfiguration
      references:
        - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
      technology:
        - cookie
        - cookies
        - flask
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cookie Security
    languages:
      - python
    fix: "True"
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
          - pattern-inside: |
              def $METHOD(..., $RESP: flask.Response, ...):
                  ...
          - pattern-inside: |
              $RESP = flask.make_response(...)
              ...
          - pattern-inside: |
              $RESP = $APP.make_response(...)
              ...
          - pattern-inside: |
              $RESP = flask.Response(...)
              ...
      - patterns:
          - pattern: $RESP.set_cookie(..., httponly=$FALSE, ...)
          - metavariable-regex:
              metavariable: $FALSE
              regex: ^(False)$
          - focus-metavariable: $FALSE

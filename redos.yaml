rules:
  - id: redos
    message: The regular expression identified appears vulnerable to Regular
      Expression Denial of Service (ReDoS) through catastrophic backtracking. If
      the input is attacker controllable, this vulnerability can lead to systems
      being non-responsive or may crash due to ReDoS. Where possible, re-write
      the regex so as not to leverage backtracking or use a library that offers
      default protection against ReDoS.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-1333: Inefficient Regular Expression Complexity"
      display-name: Regular Expression Denial of Service (ReDoS) with Express
      functional-categories:
        - regex::sink::regex
        - web::source::cookie::express
        - web::source::form-data::express
        - web::source::header::express
        - web::source::http-body::express
        - web::source::http-params::cherrypy
        - web::source::url-path-params::express
      references:
        - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
        - https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS
        - https://www.regular-expressions.info/catastrophic.html
      technology:
        - express
        - nodejs
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Denial-of-Service (DoS)
    languages:
      - javascript
      - typescript
    mode: taint
    min-version: 1.91.0
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - label: EXPRESS
        pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: function ... ($REQ, $RES) {...}
                  - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: $REQ.query
                  - pattern: $REQ.body
                  - pattern: $REQ.cookies
                  - pattern: $REQ.headers
                  - pattern: $REQ.headersDistinct
                  - pattern: $REQ.rawHeaders
                  - pattern: $REQ.get(...)
                  - pattern: $REQ.header(...)
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                  - pattern-inside: >
                      function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                      {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: query
                  - pattern: body
                  - pattern: cookies
                  - pattern: headers
                  - pattern: headersDistinct
                  - pattern: rawHeaders
                  - pattern: get(...)
                  - pattern: header(...)
      - label: EXPRESS
        pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: function ... ($REQ, $RES) {...}
                  - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: $REQ.params
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                  - pattern-inside: >
                      function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                      {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: params
      - label: EXPRESS
        patterns:
          - pattern-either:
              - patterns:
                  - pattern-either:
                      - pattern-inside: function ... ($REQ, $RES) {...}
                      - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
                  - focus-metavariable: $REQ
                  - pattern-either:
                      - pattern: $REQ.file
                      - pattern: $REQ.files
              - patterns:
                  - pattern-either:
                      - pattern-inside: |
                          function ... ({ $REQ }: Request, $RES) {...}
                      - pattern-inside: |
                          function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                      - pattern-inside: |
                          function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                      - pattern-inside: >
                          function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                          {...}
                  - focus-metavariable: $REQ
                  - pattern-either:
                      - pattern: file
                      - pattern: files
      - label: EXPRESS
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FILE.originalname
                  - pattern: $FILE.mimetype
                  - pattern: $FILE.buffer
        requires: FILES
      - label: REDOS
        patterns:
          - pattern: /$X/
          - metavariable-analysis:
              analyzer: redos
              metavariable: $X
    pattern-sinks:
      - pattern: $X.test($Y)
        requires: REDOS and EXPRESS
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: Number(...)
              - pattern: parseInt(...)
              - pattern: parseFloat(...)
              - pattern: Number.parseInt(...)
              - pattern: Number.parseFloat(...)
      - patterns:
          - pattern: $UUID.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (version|validate|v6ToV1)
          - semgrep-internal-metavariable-name:
              metavariable: $UUID
              module: uuid
      - patterns:
          - pattern: $DATE(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
                - moment
                - luxon
                - dayjs
      - patterns:
          - pattern: $DATE.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (utc|parseZone|tz)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              module: moment
      - patterns:
          - pattern: $DATE.parseJSON(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
      - patterns:
          - pattern: $DATE.DateTime.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (fromISO|fromFormat|fromObject|fromString|fromSQL|fromHTTP|fromRFC2822|fromFormatExplain|fromStringExplain|fromFormatParser)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - luxon
      - patterns:
          - pattern: $DATE.$OBJ.$FUNC(...)
          - metavariable-regex:
              metavariable: $OBJ
              regex: (LocalDate|LocalDateTime|LocalTime|OffsetDateTime|OffsetTime|ZonedDateTime|DateTimeFormatter|OffsetDate|LocalDateRange|OffsetDate)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (parse|parse1|parse2)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - "@js-joda/core"
                - "@js-joda/timezone"
                - "@js-joda/locale"
                - "@js-joda/extra"
      - pattern-either:
          - pattern: new Date(...)
          - pattern: Intl. ... .format(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $ESCAPE = require('escape-string-regexp')
                  ...
              - pattern-inside: |
                  import $ESCAPE = require('escape-string-regexp')
                  ...
              - pattern-inside: |
                  import $ESCAPE from 'escape-string-regexp'
                  ...
              - pattern-inside: |
                  import {...,$ESCAPE,...} from 'escape-string-regexp'
                  ...
              - pattern-inside: |
                  import * as $ESCAPE from 'escape-string-regexp'
                  ...
          - pattern: $ESCAPE(...)
      - by-side-effect: true
        patterns:
          - pattern: $VALIDATOR.$FUNC($SINK,...)
          - focus-metavariable: $SINK
          - semgrep-internal-metavariable-name:
              metavariable: $VALIDATOR
              module: validator
          - pattern-not: $V.contains(...)
          - pattern-not: $V.equals(...)
          - pattern-not: $V.isAfter(...)
          - pattern-not: $V.isJSON(...)
          - pattern-not: $V.isLength(...)
          - pattern-not: $V.isLowercase(...)
          - pattern-not: $V.isMultibyte(...)
          - pattern-not: $V.isStrongPassword(...)
          - pattern-not: $V.isURL(...)
          - pattern-not: $V.isUppercase(...)
          - pattern-not: $V.isVariableWidth(...)
          - pattern-not: $V.matches(...)
          - pattern-not: $V.unescape(...)
          - pattern-not: $V.trim(...)
          - pattern-not: $V.ltrim(...)
          - pattern-not: $V.rtrim(...)

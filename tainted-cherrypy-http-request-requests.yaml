rules:
  - id: tainted-cherrypy-http-request-requests
    message: Untrusted input might be used to build an HTTP request, which can lead
      to a Server-side request forgery (SSRF) vulnerability. SSRF allows an
      attacker to send crafted requests from the server side to other internal
      or external systems. SSRF can lead to unauthorized access to sensitive
      data and, in some cases, allow the attacker to control applications or
      systems that trust the vulnerable service. To prevent this vulnerability,
      avoid allowing user input to craft the base request. Instead, treat it as
      part of the path or query parameter and encode it appropriately. When user
      input is necessary to prepare the HTTP request, perform strict input
      validation. Additionally, whenever possible, use allowlists to only
      interact with expected, trusted domains.
    severity: ERROR
    metadata:
      likelihood: MEDIUM
      impact: HIGH
      confidence: MEDIUM
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-918: Server-Side Request Forgery (SSRF)"
      cwe2021-top25: true
      cwe2022-top25: true
      display-name: Server-Side Request Forgery (SSRF) in CherryPy
      functional-categories:
        - net::sink::http-request::requests
        - web::source::cookie::cherrypy
        - web::source::form-data::cherrypy
        - web::source::header::cherrypy
        - web::source::http-body::cherrypy
        - web::source::http-params::cherrypy
        - web::source::url-path-params::cherrypy
      owasp:
        - A10:2021 - Server-Side Request Forgery (SSRF)
      references:
        - https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29
      technology:
        - cherrypy
        - requests
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Server-Side Request Forgery (SSRF)
    languages:
      - python
    mode: taint
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern: cherrypy.request.$PROPERTY
                  - pattern: cherrypy.request.$PROPERTY[...]
                  - pattern: cherrypy.request.$PROPERTY.get(...)
              - metavariable-regex:
                  metavariable: $PROPERTY
                  regex: ^(body|cookie|header_list|headers|login|params|query_string|request_line)$
          - patterns:
              - pattern: |
                  @cherrypy.expose
                  def $FUNC(..., $INPUT, ...):
                    ...
              - focus-metavariable: $INPUT
          - patterns:
              - pattern-inside: |
                  @cherrypy.expose
                  class $CLS(...):
                    ...
              - pattern: |
                  def $FUNC(..., $INPUT, ...):
                    ...
              - metavariable-regex:
                  metavariable: $FUNC
                  regex: ^(GET|POST|PUT|HEAD|DELETE)$
              - focus-metavariable: $INPUT
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern: cherrypy.request.$PROPERTY
                  - pattern: cherrypy.request.$PROPERTY[...]
                  - pattern: cherrypy.request.$PROPERTY.get(...)
              - metavariable-regex:
                  metavariable: $PROPERTY
                  regex: ^(path_info)$
      - label: ADAPTER
        patterns:
          - patterns:
              - pattern: requests.adapters.$ADAPTER(...)
              - metavariable-regex:
                  metavariable: $ADAPTER
                  regex: ^(HTTPAdapter|BaseAdapter)$
      - label: SESSION
        patterns:
          - pattern: requests.Session(...)
    pattern-propagators:
      - from: $DEFAULT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $DICT = { ... }
                      ...
                  - pattern-inside: |
                      $DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $DICT.get($FIELD, $DEFAULT)
                  - pattern: $DICT.setdefault($KEY, $DEFAULT)
        to: $DICT
      - from: $FROM_DICT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $TO_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $TO_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $TO_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $TO_DICT = dict(...)
                      ...
                  - pattern-inside: |
                      $FROM_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $FROM_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $FROM_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $FROM_DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $TO_DICT.update($FROM_DICT)
                  - pattern: $TO_DICT | $FROM_DICT
                  - pattern: $TO_DICT |= $FROM_DICT
        to: $TO_DICT
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $LIST = [ ... ]
                      ...
                  - pattern-inside: |
                      $LIST = list(...)
                      ...
              - pattern-either:
                  - pattern: $LIST.append($FROM)
                  - pattern: $LIST.extend($FROM)
                  - pattern: $LIST.insert($INDEX, $FROM)
        to: $LIST
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FROM.$LOG($SINK, ...)
                  - pattern: $FROM.$LOG(..., msg=$SINK, ...)
                  - pattern: $APP.logger.$LOG($SINK, ...)
              - metavariable-regex:
                  metavariable: $LOG
                  regex: ^(info|warning|error|critical|log|exception|handle)$
        to: $SINK
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $SET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $SET = set(...)
                      ...
                  - pattern-inside: |
                      $OTHERSET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $OTHERSET = set(...)
                      ...
              - pattern-either:
                  - pattern: $SET.update(..., $FROM, ...)
                  - pattern: $SET.intersection_update(..., $FROM, ...)
                  - pattern: $SET.difference_update(..., $FROM, ...)
                  - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
                  - pattern: $SET.add($FROM)
                  - pattern: $SET |= $FROM
                  - pattern: $SET &= $FROM
                  - pattern: $SET -= $FROM
                  - pattern: $SET ^= $FROM
        to: $SET
      - from: $FORM
        patterns:
          - pattern: $FORM.populate_obj($OBJ)
        to: $OBJ
      - from: $URL
        label: __SOURCE__
        patterns:
          - patterns:
              - pattern: $REQUEST.prepare_url($URL, $PARAMS)
        requires: __SOURCE__
        to: $REQUEST
      - from: $SESSION
        label: SESSION
        patterns:
          - patterns:
              - pattern-either:
                  - patterns:
                      - pattern-either:
                          - pattern: $SESSION.$FUNC($URL, ...)
                          - pattern: $SESSION.$FUNC(..., url=$URL, ...)
                      - metavariable-regex:
                          metavariable: $FUNC
                          regex: ^(delete|get|head|options|patch|post|put)
                  - pattern-either:
                      - pattern: $SESSION.request($METHOD, $URL, ...)
                      - pattern: $SESSION.request(..., url=$URL, ...)
                      - pattern: $SESSION.send($URL, ...)
                      - pattern: $SESSION.send(..., request=$URL, ...)
        requires: SESSION
        to: $URL
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: requests.request($METHOD, $URL, ...)
              - pattern: requests.request(..., url=$URL, ...)
              - pattern: requests.$FUNC($URL, ...)
              - pattern: requests.$FUNC(..., url=$URL, ...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(head|get|post|put|patch|delete)
          - focus-metavariable: $URL
        requires: __SOURCE__
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern: $SESSION.$FUNC($URL, ...)
                  - pattern: $SESSION.$FUNC(..., url=$URL, ...)
              - metavariable-regex:
                  metavariable: $FUNC
                  regex: ^(delete|get|head|options|patch|post|put)
              - focus-metavariable: $URL
          - patterns:
              - pattern-either:
                  - pattern: $SESSION.request($METHOD, $URL, ...)
                  - pattern: $SESSION.request(..., url=$URL, ...)
              - focus-metavariable: $URL
          - patterns:
              - pattern-either:
                  - pattern: $SESSION.send($REQUEST, ...)
                  - pattern: $SESSION.send(..., request=$REQUEST, ...)
              - focus-metavariable: $REQUEST
        requires: __SOURCE__ and (SESSION or ADAPTER)
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: int(...)
              - pattern: bool(...)
              - pattern: float(...)
              - pattern: complex(...)
              - pattern: oct(...)
              - pattern: hex(...)
              - pattern: bin(...)
              - pattern: round(...)
              - pattern: id(...)
              - pattern: hash(...)
              - pattern: len(...)
              - pattern: type(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $DICT[$KEY]
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE for ... in ...}
                  ...
              - pattern-inside: |
                  $DICT.get($KEY, $DEFAULT)
                  ...
              - pattern-inside: |
                  $DICT = { }
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE, ... }
                  ...
              - pattern-inside: |
                  $DICT = dict(...)
                  ...
          - pattern-either:
              - pattern: $DICT.clear()
              - pattern: $DICT.len()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $LIST = [ ... ]
                  ...
              - pattern-inside: |
                  $LIST = list(...)
                  ...
          - pattern-either:
              - pattern: $LIST.clear()
              - pattern: $LIST.count(...)
              - pattern: $LIST.index(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.len()
              - pattern: $SET.clear()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = { $ITEM for ... in ...}
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
              - pattern-inside: |
                  $SET = frozenset(...)
                  ...
              - pattern-inside: |
                  $OTHERSET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $OTHERSET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.isdisjoint($OTHERSET)
              - pattern: $SET.difference($OTHERSET)
              - pattern: $SET.issubset($OTHERSET)
              - pattern: $SET < $OTHERSET
              - pattern: $SET <= $OTHERSET
              - pattern: $SET.issuperset($OTHERSET)
              - pattern: $SET > $OTHERSET
              - pattern: $SET >= $OTHERSET
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $TUPLE = ( $ITEM, ... )
                  ...
              - pattern-inside: |
                  $TUPLE = $ITEM, ...
                  ...
              - pattern-inside: |
                  $TUPLE = tuple(...)
                  ...
          - pattern-either:
              - pattern: $TUPLE.len()
      - pattern: django.shortcuts.get_object_or_404(...)
      - pattern: django.shortcuts.get_list_or_404(...)
      - pattern: urllib.parse.urlencode(...)
      - pattern: urllib.parse.quote(...)
      - pattern: urllib.parse.quote_plus(...)
      - pattern: urllib.urlencode(...)
      - pattern: urllib.quote(...)
      - pattern: urllib.quote_plus(...)
      - pattern: django.urls.reverse(...)
      - pattern: django.shortcuts.reverse(...)
      - pattern: django.urls.base.reverse(...)
      - pattern: $REQ.META.get("HTTP_REFERER")
      - pattern: $REQ.META.HTTP_REFERER
      - pattern: django.urls.reverse_lazy(...)
      - pattern: django.urls.base.reverse_lazy(...)
      - pattern: django.core.urlresolvers.reverse(...)
      - pattern: django.urls.resolvers.reverse(...)

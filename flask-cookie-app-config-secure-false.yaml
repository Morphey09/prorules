rules:
  - id: flask-cookie-app-config-secure-false
    message: Detected a cookie where the `Secure` flag is either missing or
      disabled. The `Secure` cookie flag instructs the browser to forbid sending
      the cookie over an insecure HTTP request. If this wasn't intentional, it's
      recommended to set the Secure flag to true so that all session cookies
      will be by default sent over HTTPS. It is also possible to use the
      flask-talisman extension to enforce a secure configuration.
    severity: INFO
    metadata:
      likelihood: LOW
      impact: LOW
      confidence: HIGH
      category: security
      subcategory:
        - secure default
      cwe:
        - "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
      display-name: Cookie Without 'Secure' Attribute in flask
      functional-categories:
        - web::search::cookie-config::flask
        - web::search::cookie-config::flask-jwt-extended
        - web::search::cookie-config::flask-login
        - web::search::cookie-config::flask-session
      owasp:
        - A05:2021 - Security Misconfiguration
      references:
        - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
      technology:
        - cookie
        - cookies
        - flask
        - web
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Cookie Security
    languages:
      - python
    fix: "True"
    options:
      symbolic_propagation: true
    patterns:
      - patterns:
          - pattern-either:
              - pattern: $APP.config["$SESSION_COOKIE_SECURE"] = $FALSE
              - pattern: $APP.config.$SESSION_COOKIE_SECURE = $FALSE
              - patterns:
                  - pattern: |
                      $APP.config.$UPDATE(
                        ...,
                        $SESSION_COOKIE_SECURE = $FALSE,
                        ...
                      )
                  - pattern-not-inside: |
                      $APP.config.$UPDATE(
                          ...,
                          TESTING=True,
                          ...
                      )
                  - pattern-not-inside: |
                      $APP.config.$UPDATE(
                          ...,
                          DEBUG=True,
                          ...
                      )
                  - metavariable-regex:
                      metavariable: $UPDATE
                      regex: ^(update|from_mapping)$
              - pattern: |
                  $OBJ = $CLASS()
                  ...
                  $OBJ.$SESSION_COOKIE_SECURE = $FALSE
                  ...
                  $APP.config.from_object($OBJ, ...)
              - pattern: |
                  $SESSION_COOKIE_SECURE = $FALSE
                  ...
                  $APP.config.from_object(__name__)
          - metavariable-regex:
              metavariable: $SESSION_COOKIE_SECURE
              regex: ^(SESSION|REMEMBER|JWT)_COOKIE_SECURE$
          - metavariable-regex:
              metavariable: $FALSE
              regex: ^(False)$
          - focus-metavariable: $FALSE

rules:
  - id: documentbuilderfactory-xxe-parse
    message: 'The application is using an XML parser that has not been safely
      configured. This might lead to XML External Entity (XXE) vulnerabilities
      when parsing user-controlled input. An attacker can include document type
      definitions (DTDs) or XIncludes which can interact with internal or
      external hosts. XXE can lead to other vulnerabilities, such as Local File
      Inclusion (LFI), Remote Code Execution (RCE), and Server-side request
      forgery (SSRF), depending on the application configuration. An attacker
      can also use DTDs to expand recursively, leading to a Denial-of-Service
      (DoS) attack, also known as a `Billion Laughs Attack`. It is our
      recommendation to secure this parser against XXE attacks by configuring
      $FACTORY with
      `$FACTORY.setFeature(http://apache.org/xml/features/disallow-doctype-decl,
      true)`. Alternatively, the following configurations also provide
      protection against XXE attacks.
      `$FACTORY.setExpandEntityReferences(false)`
      `$FACTORY.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true)`
      `$FACTORY.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "")`
      `$FACTORY.setFeature("http://xml.org/sax/features/external-general-entities",
      false)`. For more information, see: [Java XXE
      prevention](https://semgrep.dev/docs/cheat-sheets/java-xxe/)'
    severity: ERROR
    metadata:
      likelihood: MEDIUM
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-611: Improper Restriction of XML External Entity Reference"
      cwe2020-top25: true
      cwe2021-top25: true
      cwe2022-top25: true
      display-name: XML External Entity (XXE) in DocumentBuilderFactory
      functional-categories:
        - xml::sink::xml-parser::javax.xml
      owasp:
        - A04:2017 - XML External Entities (XXE)
        - A05:2021 - Security Misconfiguration
      references:
        - https://blog.sonarsource.com/secure-xml-processor/
        - https://blog.sonarsource.com/understanding-xxe-vulnerabilities/
        - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
        - https://cwe.mitre.org/data/definitions/611.html
        - https://cwe.mitre.org/data/definitions/776.html
        - https://docs.oracle.com/en/java/javase/13/security/java-api-xml-processing-jaxp-security-guide.html#GUID-D97A1F1D-8DDF-4D19-A7E5-99099F27346E
        - https://github.com/semgrep/java-xxe-research
        - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
        - https://rules.sonarsource.com/java/type/Vulnerability/RSPEC-2755
      supersedes:
        - java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-false.documentbuilderfactory-disallow-doctype-decl-false
        - java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing
        - java.lang.security.audit.xxe.documentbuilderfactory-external-general-entities-true.documentbuilderfactory-external-general-entities-true
        - java.lang.security.audit.xxe.documentbuilderfactory-external-parameter-entities-true.documentbuilderfactory-external-parameter-entities-true
        - java.lang.security.xxe.documentbuilderfactory-xxe.documentbuilderfactory-xxe
      technology:
        - xml
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - XML Injection
    languages:
      - java
    mode: taint
    options:
      interfile: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
      taint_match_on: source
    pattern-sources:
      - patterns:
          - pattern: $FACTORY = javax.xml.parsers.DocumentBuilderFactory.newInstance()
          - pattern-inside: |
              $FACTORY = ...;
              ...
              $PARSER = $FACTORY.newDocumentBuilder();
          - pattern-not-inside: |
              $FACTORY = ...;
              ...
              $FACTORY.setFeature("=~/.*secure-processing.*/", true);
          - pattern-not-inside: |
              $FACTORY = ...;
              ...
              $FACTORY.setAttribute("=~/.*accessExternalDTD.*/", "");
          - pattern-not-inside: >
              $FACTORY = ...;

              ...

              $FACTORY.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
          - pattern-not-inside: |
              $FACTORY = ...;
              ...
              $FACTORY.setExpandEntityReferences(false);
          - pattern-not-inside: >
              $FACTORY = ...;

              ...

              $FACTORY.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
          - pattern-not-inside: >
              $FACTORY = ...;

              ...

              $FACTORY.setAttribute(javax.xml.XMLConstants.ACCESS_EXTERNAL_DTD, "");
          - pattern-not-inside: >
              $FACTORY = ...;

              ...

              $FACTORY.setFeature("http://xml.org/sax/features/external-general-entities", false);
          - pattern-not-inside: |
              $FACTORY = ...;
              ...
              $PARSER = $FACTORY.newDocumentBuilder();
              ...
              $PARSER.setEntityResolver(...);
    pattern-propagators:
      - from: $FROM
        patterns:
          - pattern-either:
              - patterns:
                  - pattern-either:
                      - pattern: (java.util.List $TO).$METHOD(...)
                      - pattern: (java.util.List<$E> $TO).$METHOD(...)
                      - pattern: (java.util.Stack $TO).$METHOD(...)
                      - pattern: (java.util.Stack<$E> $TO).$METHOD(...)
                      - pattern: (java.util.Vector $TO).$METHOD(...)
                      - pattern: (java.util.Vector<$E> $TO).$METHOD(...)
                      - pattern: (java.util.ArrayList $TO).$METHOD(...)
                      - pattern: (java.util.ArrayList<$E> $TO).$METHOD(...)
                      - pattern: (java.util.LinkedList $TO).$METHOD(...)
                      - pattern: (java.util.LinkedList<$E> $TO).$METHOD(...)
                      - pattern: (java.util.AbstractList $TO).$METHOD(...)
                      - pattern: (java.util.AbstractList<$E> $TO).$METHOD(...)
                      - pattern: (java.util.AbstractSequentialList $TO).$METHOD(...)
                      - pattern: (java.util.AbstractSequentialList<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.CopyOnWriteArrayList $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.CopyOnWriteArrayList<$E> $TO).$METHOD(...)
                  - pattern-either:
                      - pattern: $TO.add($FROM)
                      - pattern: $TO.add($X, $FROM)
                      - pattern: $TO.addAll($FROM)
                      - pattern: $TO.addAll($X, $FROM)
                      - pattern: $TO.addFirst(..., $FROM, ...)
                      - pattern: $TO.addLast(..., $FROM, ...)
                      - pattern: $TO.addAllAbsent(..., $FROM, ...)
                      - pattern: $TO.addIfAbsent(..., $FROM, ...)
                      - pattern: $TO.addElement(..., $FROM, ...)
                      - pattern: $TO.set($X, $FROM)
                      - pattern: $TO.push(..., $FROM, ...)
                      - pattern: $TO.setElementAt(..., $FROM, ...)
                      - pattern: $TO.replaceAll(..., $FROM, ...)
                      - pattern: $TO.insertElementAt($FROM, ...)
              - patterns:
                  - pattern-either:
                      - pattern: (java.util.Queue $TO).$METHOD(...)
                      - pattern: (java.util.Queue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.Deque $TO).$METHOD(...)
                      - pattern: (java.util.Deque<$E> $TO).$METHOD(...)
                      - pattern: (java.util.ArrayDeque $TO).$METHOD(...)
                      - pattern: (java.util.ArrayDeque<$E> $TO).$METHOD(...)
                      - pattern: (java.util.AbstractQueue $TO).$METHOD(...)
                      - pattern: (java.util.AbstractQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.DelayQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.DelayQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.BlockingQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.BlockingQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.TransferQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.TransferQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.BlockingDeque $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.BlockingDeque<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.SynchronousQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.SynchronousQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.LinkedTransferQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.LinkedTransferQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ArrayBlockingQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ArrayBlockingQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.LinkedBlockingDeque $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.LinkedBlockingDeque<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.LinkedBlockingQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.LinkedBlockingQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.PriorityBlockingQueue $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.PriorityBlockingQueue<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentLinkedDeque $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentLinkedDeque<$E> $TO).$METHOD(...)
                  - pattern-either:
                      - pattern: $TO.add(..., $FROM, ...)
                      - pattern: $TO.addFirst(..., $FROM, ...)
                      - pattern: $TO.addLast(..., $FROM, ...)
                      - pattern: $TO.addAll(..., $FROM, ...)
                      - pattern: $TO.put(..., $FROM, ...)
                      - pattern: $TO.putLast(..., $FROM, ...)
                      - pattern: $TO.putFirst(..., $FROM, ...)
                      - pattern: $TO.push(..., $FROM, ...)
                      - pattern: $TO.offer($FROM, ...)
                      - pattern: $TO.offerLast($FROM, ...)
                      - pattern: $TO.offerFirst($FROM, ...)
              - patterns:
                  - pattern-either:
                      - pattern: (java.util.Set $TO).$METHOD(...)
                      - pattern: (java.util.Set<$E> $TO).$METHOD(...)
                      - pattern: (java.util.TreeSet $TO).$METHOD(...)
                      - pattern: (java.util.TreeSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.EnumSet $TO).$METHOD(...)
                      - pattern: (java.util.EnumSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.HashSet $TO).$METHOD(...)
                      - pattern: (java.util.HashSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.SortedSet $TO).$METHOD(...)
                      - pattern: (java.util.SortedSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.AbstractSet $TO).$METHOD(...)
                      - pattern: (java.util.AbstractSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.NavigableSet $TO).$METHOD(...)
                      - pattern: (java.util.NavigableSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.LinkedHashSet $TO).$METHOD(...)
                      - pattern: (java.util.LinkedHashSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.AbstractCollection $TO).$METHOD(...)
                      - pattern: (java.util.AbstractCollection<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.CopyOnWriteArraySet $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.CopyOnWriteArraySet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentSkipListSet $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentSkipListSet<$E> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentHashMap.KeySetView $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentHashMap.KeySetView<$E>
                          $TO).$METHOD(...)
                  - pattern-either:
                      - pattern: $TO.add(..., $FROM, ...)
                      - pattern: $TO.addAll(..., $FROM, ...)
              - patterns:
                  - pattern-either:
                      - pattern: (java.util.Map $TO).$METHOD(...)
                      - pattern: (java.util.Map<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.NavigableMap $TO).$METHOD(...)
                      - pattern: (java.util.NavigableMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.SortedMap $TO).$METHOD(...)
                      - pattern: (java.util.SortedMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.TreeMap $TO).$METHOD(...)
                      - pattern: (java.util.TreeMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.AbstractMap $TO).$METHOD(...)
                      - pattern: (java.util.AbstractMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.EnumMap $TO).$METHOD(...)
                      - pattern: (java.util.EnumMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.HashMap $TO).$METHOD(...)
                      - pattern: (java.util.HashMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.Hashtable $TO).$METHOD(...)
                      - pattern: (java.util.Hashtable<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.IdentityHashMap $TO).$METHOD(...)
                      - pattern: (java.util.IdentityHashMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.LinkedHashMap $TO).$METHOD(...)
                      - pattern: (java.util.LinkedHashMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.WeakHashMap $TO).$METHOD(...)
                      - pattern: (java.util.WeakHashMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentMap $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentHashMap $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentHashMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentSkipListMap $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentSkipListMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentNavigableMap $TO).$METHOD(...)
                      - pattern: (java.util.concurrent.ConcurrentNavigableMap<$K, $V> $TO).$METHOD(...)
                      - pattern: (java.util.Properties $TO).$METHOD(...)
                      - pattern: (java.util.Properties<$K, $V> $TO).$METHOD(...)
                  - pattern-either:
                      - pattern: $TO.merge(..., $FROM, ...)
                      - pattern: $TO.put(..., $FROM, ...)
                      - pattern: $TO.putAll(..., $FROM, ...)
                      - pattern: $TO.putIfAbsent(..., $FROM, ...)
                      - pattern: $TO.replace($X, ..., $FROM, ...)
                      - pattern: $TO.replaceAll(..., $FROM, ...)
        to: $TO
      - from: $INPUT
        patterns:
          - pattern-either:
              - pattern: String.format($FMT, ..., $INPUT, ...)
              - pattern: MessageFormat.format($FMT, ..., $INPUT, ...)
        to: $FMT
      - from: $FROM
        patterns:
          - pattern-either:
              - pattern: (StringBuilder $TO).append($FROM, ...)
              - pattern: (StringBuilder $TO).insert($OFFSET, $FROM, ...)
              - pattern: (StringBuilder $TO).replace($START, $END, $FROM, ...)
              - pattern: (StringBuffer $TO).append($FROM, ...)
              - pattern: (StringBuffer $TO).insert($OFFSET, $FROM, ...)
        to: $TO
      - from: $FACTORY
        patterns:
          - pattern: $PARSER = $FACTORY.newDocumentBuilder()
        to: $PARSER
    pattern-sinks:
      - pattern: (DocumentBuilder $PARSER).parse(...)
    pattern-sanitizers:
      - pattern: (ChoiceFormat $X).format(...)
      - pattern: (DecimalFormat $X).format(...)
      - pattern: (java.util.UUID $X)

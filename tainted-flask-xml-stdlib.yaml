rules:
  - id: tainted-flask-xml-stdlib
    message: The application is using an XML parser that has not been safely
      configured. This might lead to XML External Entity (XXE) vulnerabilities
      when parsing user-controlled input. An attacker can include document type
      definitions (DTDs) which can interact with internal or external hosts. XXE
      can lead to other vulnerabilities, such as Local File Inclusion (LFI),
      Remote Code Execution (RCE), and Server-side request forgery (SSRF),
      depending on the application configuration. An attacker can also use DTDs
      to expand recursively, leading to a Denial-of-Service (DoS) attack, also
      known as a `Billion Laughs Attack`. The best defense against XXE is to
      have an XML parser that supports disabling DTDs. Limiting the use of
      external entities from the start can prevent the parser from being used to
      process untrusted XML files. Reducing dependencies on external resources
      is also a good practice for performance reasons. It is difficult to
      guarantee that even a trusted XML file on your server or during
      transmission has not been tampered with by a malicious third-party. The
      xml parsing libraries are safe from several known high-impact
      vulnerabilities such as external entity expansion and DTD retrieval.
      However, they are still vulnerable to denial of service attacks such as
      billion laughs and quadratic blowup. To mitigate these attacks, it is
      recommended to use a different parser such as defusedxml.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-776: Improper Restriction of Recursive Entity References in DTDs
          ('XML Entity Expansion')"
      display-name: XML Entity Expansion in Standard Library
      functional-categories:
        - web::source::cookie::flask
        - web::source::form-data::flask
        - web::source::form-data::flask-wtf
        - web::source::form-data::wtforms
        - web::source::header::flask
        - web::source::http-body::flask
        - web::source::http-params::flask
        - web::source::url-path-params::flask
        - xml::sink::xml-parser::sax
        - xml::sink::xml-parser::stdlib
        - xml::sink::xml-parser::stdlib2
        - xml::sink::xml-parser::stdlib3
        - xml::sink::xml-parser::xml
        - xml::sink::xml-parser::xml.dom
        - xml::sink::xml-parser::xml.dom.minidom
        - xml::sink::xml-parser::xml.dom.pulldom
        - xml::sink::xml-parser::xml.etree
        - xml::sink::xml-parser::xml.sax
      owasp:
        - A04:2017 - XML External Entities (XXE)
        - A05:2021 - Security Misconfiguration
      references:
        - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
        - https://cheatsheetseries.owasp.org/cheatsheets/XML_Security_Cheat_Sheet.html
        - https://cwe.mitre.org/data/definitions/776.html
        - https://docs.python.org/3/library/xml.html#xml-vulnerabilities
        - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
        - https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing
        - https://pypi.org/project/defusedxml/
      technology:
        - flask
        - flask-wtf
        - python
        - sax
        - stdlib
        - stdlib2
        - stdlib3
        - web
        - wtforms
        - xml
        - xml.dom
        - xml.dom.minidom
        - xml.dom.pulldom
        - xml.etree
        - xml.sax
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - XML Injection
    languages:
      - python
    mode: taint
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern: flask.request.$FUNC()
              - metavariable-regex:
                  metavariable: $FUNC
                  regex: ^(from_values|get_data|get_json)$
          - patterns:
              - pattern-either:
                  - pattern: flask.request.$PROPERTY
                  - pattern: flask.request.$PROPERTY[...]
                  - pattern: flask.request.$PROPERTY.get(...)
              - metavariable-regex:
                  metavariable: $PROPERTY
                  regex: ^(args|cookies|data|files|form|full_path|headers|input_stream|json|path|stream|values|view_args)$
          - patterns:
              - pattern: |
                  @$APP.$ROUTE
                  def $FUNC(..., $PARAM, ...):
                    ...
              - metavariable-regex:
                  metavariable: $ROUTE
                  regex: ^(endpoint)$
              - metavariable-type:
                  metavariable: $APP
                  types:
                    - flask.Flask
                    - flask.Blueprint
              - focus-metavariable: $PARAM
      - patterns:
          - pattern: |
              @$APP.$ROUTE(...)
              def $FUNC(..., $PARAM, ...):
                ...
          - metavariable-regex:
              metavariable: $ROUTE
              regex: ^(route|delete|get|patch|post|put)$
          - metavariable-type:
              metavariable: $APP
              types:
                - flask.Flask
                - flask.Blueprint
          - focus-metavariable: $PARAM
      - patterns:
          - pattern-inside: |
              @$APP.$ROUTE(...)
              def $FUNC(...):
                ...
          - pattern: $FORM.$FIELD.data
          - metavariable-regex:
              metavariable: $ROUTE
              regex: ^(route|delete|get|patch|post|put|endpoint)$
          - metavariable-type:
              metavariable: $FORM
              type: FlaskForm
          - metavariable-type:
              metavariable: $APP
              types:
                - flask.Flask
                - flask.Blueprint
      - label: ELEMENT_TREE_ELEMENT
        patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.Element(...)
              - pattern: xml.etree.ElementTree.fromstring(...)
              - pattern: xml.etree.ElementTree.fromstringlist(...)
              - pattern: xml.etree.ElementTree.iterparse(...)
              - pattern: xml.etree.ElementTree.parse(...)
              - pattern: xml.etree.ElementTree.SubElement(...)
              - pattern: xml.etree.ElementTree.XML(...)
              - pattern: xml.etree.ElementTree.XMLID(...)
      - label: ELEMENT_TREE_ELEMENT
        patterns:
          - pattern-either:
              - pattern: $TREE.find(...)
              - pattern: $TREE.findtext(...)
              - pattern: $TREE.findall(...)
              - pattern: $TREE.iterfind(...)
              - pattern: $TREE.iter(...)
        requires: ELEMENT_TREE_TREE
      - label: ELEMENT_TREE_TREE
        patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.ElementTree(...)
      - label: ELEMENT_TREE_TREEBUILDER
        patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.TreeBuilder(...)
      - label: ELEMENT_TREE_PARSER
        patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.XMLParser(...)
              - pattern: xml.etree.ElementTree.XMLPullParser(...)
      - label: DOM_ELEMENT
        patterns:
          - pattern-either:
              - pattern: $DOC.documentElement
              - pattern: $DOC.createElement(...)
              - pattern: $DOC.createElementNS(...)
              - pattern: $DOC.createTextNode(...)
              - pattern: $DOC.createComment(...)
              - pattern: $DOC.createProcessingInstruction(...)
              - pattern: $DOC.createAttribute(...)
              - pattern: $DOC.createAttributeNS(...)
              - pattern: $DOC.getElementsByTagName(...)
              - pattern: $DOC.getElementsByTagNameNS(...)
        requires: DOM_DOCUMENT
      - label: DOM_DOCUMENT
        patterns:
          - pattern-either:
              - pattern: xml.dom.DOMImplementation.createDocument(...)
              - pattern: xml.dom.domreg.DOMImplementation.createDocument(...)
              - pattern: xml.dom.minidom.DOMImplementation.createDocument(...)
      - label: DOM_DOCUMENT
        patterns:
          - pattern-either:
              - pattern: $DOMIMPLEMENTATION.createDocument(...)
        requires: DOM_DOMIMPLEMENTATION
      - label: DOM_DOMIMPLEMENTATION
        patterns:
          - pattern-either:
              - pattern: xml.dom.domreg.getDOMImplementation(...)
              - pattern: xml.dom.minidom.getDOMImplementation(...)
      - label: SAX_PARSER
        patterns:
          - pattern-either:
              - pattern: xml.sax.make_parser(...)
              - pattern: xml.sax._create_parser(...)
              - pattern: xml.sax.xmlreader.IncrementalParser(...)
              - pattern: xml.sax.saxutils.XMLFilterBase(...)
              - pattern: xml.sax.expatreader.ExpatParser(...)
              - pattern: xml.sax.expatreader.create_parser(...)
              - pattern: xml.sax.expatbuilder.ExpatBuilder(...)
              - pattern: xml.sax.expatbuilder.FragmentBuilder(...)
              - pattern: xml.sax.expatbuilder.ExpatBuilderNS(...)
              - pattern: xml.sax.expatbuilder.FragmentBuilderNS(...)
              - pattern: xml.sax.expatbuilder.InternalSubsetExtractor(...)
              - pattern: xml.sax.expatbuilder.Namespaces.createParser(...)
              - pattern: xml.sax.expatbuilder.makeBuilder(...)
    pattern-propagators:
      - from: $DEFAULT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $DICT = { ... }
                      ...
                  - pattern-inside: |
                      $DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $DICT.get($FIELD, $DEFAULT)
                  - pattern: $DICT.setdefault($KEY, $DEFAULT)
        to: $DICT
      - from: $FROM_DICT
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $TO_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $TO_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $TO_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $TO_DICT = dict(...)
                      ...
                  - pattern-inside: |
                      $FROM_DICT[$KEY]
                      ...
                  - pattern-inside: |
                      $FROM_DICT.get($KEY, $DEFAULT)
                      ...
                  - pattern-inside: |
                      $FROM_DICT = { ... }
                      ...
                  - pattern-inside: |
                      $FROM_DICT = dict(...)
                      ...
              - pattern-either:
                  - pattern: $TO_DICT.update($FROM_DICT)
                  - pattern: $TO_DICT | $FROM_DICT
                  - pattern: $TO_DICT |= $FROM_DICT
        to: $TO_DICT
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $LIST = [ ... ]
                      ...
                  - pattern-inside: |
                      $LIST = list(...)
                      ...
              - pattern-either:
                  - pattern: $LIST.append($FROM)
                  - pattern: $LIST.extend($FROM)
                  - pattern: $LIST.insert($INDEX, $FROM)
        to: $LIST
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FROM.$LOG($SINK, ...)
                  - pattern: $FROM.$LOG(..., msg=$SINK, ...)
                  - pattern: $APP.logger.$LOG($SINK, ...)
              - metavariable-regex:
                  metavariable: $LOG
                  regex: ^(info|warning|error|critical|log|exception|handle)$
        to: $SINK
      - from: $FROM
        patterns:
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $SET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $SET = set(...)
                      ...
                  - pattern-inside: |
                      $OTHERSET = { $ITEM, ... }
                      ...
                  - pattern-inside: |
                      $OTHERSET = set(...)
                      ...
              - pattern-either:
                  - pattern: $SET.update(..., $FROM, ...)
                  - pattern: $SET.intersection_update(..., $FROM, ...)
                  - pattern: $SET.difference_update(..., $FROM, ...)
                  - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
                  - pattern: $SET.add($FROM)
                  - pattern: $SET |= $FROM
                  - pattern: $SET &= $FROM
                  - pattern: $SET -= $FROM
                  - pattern: $SET ^= $FROM
        to: $SET
      - from: $FORM
        patterns:
          - pattern: $FORM.populate_obj($OBJ)
        to: $OBJ
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: xml.etree.ElementTree.fromstring($SINK, ...)
              - pattern: xml.etree.ElementTree.fromstring(..., text=$SINK, ...)
              - pattern: xml.etree.ElementTree.fromstringlist($SINK, ...)
              - pattern: xml.etree.ElementTree.fromstringlist(..., sequence=$SINK, ...)
              - pattern: xml.etree.ElementTree.iterparse($SINK, ...)
              - pattern: xml.etree.ElementTree.iterparse(..., source=$SINK, ...)
              - pattern: xml.etree.ElementTree.parse($SINK, ...)
              - pattern: xml.etree.ElementTree.parse(..., source=$SINK, ...)
              - pattern: xml.etree.ElementTree.SubElement($PARENT, $SINK, ...)
              - pattern: xml.etree.ElementTree.SubElement(..., tag=$SINK, ...)
              - pattern: xml.etree.ElementTree.XML($SINK, ...)
              - pattern: xml.etree.ElementTree.XML(..., text=$SINK, ...)
              - pattern: xml.etree.ElementTree.XMLID($SINK, ...)
              - pattern: xml.etree.ElementTree.XMLID(..., text=$SINK, ...)
              - pattern: xml.etree.ElementTree.Element($SINK, ...)
              - pattern: xml.etree.ElementTree.Element(..., tag=$SINK, ...)
              - pattern: xml.etree.ElementTree.Element(..., text=$SINK, ...)
              - pattern: xml.etree.ElementTree.Element(..., attrib=$SINK, ...)
              - pattern: xml.etree.ElementTree.Element(..., tail=$SINK, ...)
              - pattern: xml.etree.cElementTree.fromstring($SINK, ...)
              - pattern: xml.etree.cElementTree.fromstring(..., text=$SINK, ...)
              - pattern: xml.etree.cElementTree.fromstringlist($SINK, ...)
              - pattern: xml.etree.cElementTree.fromstringlist(..., sequence=$SINK, ...)
              - pattern: xml.etree.cElementTree.iterparse($SINK, ...)
              - pattern: xml.etree.cElementTree.iterparse(..., source=$SINK, ...)
              - pattern: xml.etree.cElementTree.parse($SINK, ...)
              - pattern: xml.etree.cElementTree.parse(..., source=$SINK, ...)
              - pattern: xml.etree.cElementTree.SubElement($PARENT, $SINK, ...)
              - pattern: xml.etree.cElementTree.SubElement(..., tag=$SINK, ...)
              - pattern: xml.etree.cElementTree.XML($SINK, ...)
              - pattern: xml.etree.cElementTree.XML(..., text=$SINK, ...)
              - pattern: xml.etree.cElementTree.XMLID($SINK, ...)
              - pattern: xml.etree.cElementTree.XMLID(..., text=$SINK, ...)
              - pattern: xml.etree.cElementTree.Element($SINK, ...)
              - pattern: xml.etree.cElementTree.Element(..., tag=$SINK, ...)
              - pattern: xml.etree.cElementTree.Element(..., text=$SINK, ...)
              - pattern: xml.etree.cElementTree.Element(..., attrib=$SINK, ...)
              - pattern: xml.etree.cElementTree.Element(..., tail=$SINK, ...)
              - pattern: xml.dom.minidom.parse($SINK,...)
              - pattern: xml.dom.minidom.parse(..., file=$SINK,...)
              - pattern: xml.dom.minidom.parseString($SINK,...)
              - pattern: xml.dom.minidom.parseString(..., string=$SINK,...)
              - pattern: xml.dom.pulldom.parse($SINK, ...)
              - pattern: xml.dom.pulldom.parse(..., stream_or_string=$SINK, ...)
              - pattern: xml.dom.pulldom.parseString($SINK, ...)
              - pattern: xml.dom.pulldom.parseString(..., string=$SINK, ...)
              - pattern: xml.dom.expatbuilder.parse($SINK, ...)
              - pattern: xml.dom.expatbuilder.parse(..., stream_or_string=$SINK, ...)
              - pattern: xml.dom.expatbuilder.parseString($SINK, ...)
              - pattern: xml.dom.expatbuilder.parseString(..., string=$SINK, ...)
              - pattern: xml.dom.expatbuilder.parseFragmentString($SINK, ...)
              - pattern: xml.dom.expatbuilder.parseFragmentString(..., string=$SINK, ...)
              - pattern: xml.dom.expatbuilder.parseFragment($SINK, ...)
              - pattern: xml.dom.expatbuilder.parseFragment(..., file=$SINK, ...)
              - pattern: xml.sax.parse(..., filename_or_stream=$SINK, ...)
              - pattern: xml.sax.parse($SINK, ...)
              - pattern: xml.sax.parseString(..., string=$SINK, ...)
              - pattern: xml.sax.parseString($SINK, ...)
        requires: __SOURCE__
      - patterns:
          - pattern-either:
              - pattern: $ELEMENT.set(..., $SINK, ...)
              - pattern: $ELEMENT.set(..., key=$SINK, ...)
              - pattern: $ELEMENT.set(..., value=$SINK, ...)
              - pattern: $ELEMENT.makeelement(..., $SINK, ...)
              - pattern: $ELEMENT.makeelement(..., tag=$SINK, ...)
              - pattern: $ELEMENT.makeelement(..., attrib=$SINK, ...)
              - pattern: $ELEMENT.text = $SINK
        requires: __SOURCE__ and ELEMENT_TREE_ELEMENT
      - patterns:
          - pattern-either:
              - pattern: $TREE.parse($SINK, ...)
              - pattern: $TREE.parse(..., source=$SINK, ...)
        requires: __SOURCE__ and ELEMENT_TREE_TREE
      - patterns:
          - pattern-either:
              - pattern: $TREE.data($SINK)
              - pattern: $TREE.data(data=$SINK)
              - pattern: $TREE.end($SINK)
              - pattern: $TREE.end(tag=$SINK)
              - pattern: $TREE.start(..., $SINK, ...)
              - pattern: $TREE.start(..., tag=$SINK, ...)
              - pattern: $TREE.start(..., attrs=$SINK, ...)
              - pattern: $TREE.doctype($SINK, ...)
              - pattern: $TREE.doctype($NAME, $SINK, ...)
              - pattern: $TREE.doctype(..., name=$SINK, ...)
              - pattern: $TREE.doctype(..., pubid=$SINK, ...)
        requires: __SOURCE__ and ELEMENT_TREE_TREEBUILDER
      - patterns:
          - pattern-either:
              - pattern: $TREE.feed($SINK, ...)
              - pattern: $TREE.feed(..., data=$SINK, ...)
        requires: __SOURCE__ and ELEMENT_TREE_PARSER
      - patterns:
          - pattern-either:
              - pattern: $DOC.createDocument($NS, $SINK, ...)
              - pattern: $DOC.createDocument($NS, $NAME, $SINK)
              - pattern: $DOC.createDocument(..., namespace=$SINK, ...)
              - pattern: $DOC.createDocument(..., doctype=$SINK, ...)
        requires: __SOURCE__ and DOM_DOMIMPLEMENTATION
      - patterns:
          - pattern-either:
              - pattern: $DOC.createElement($SINK)
              - pattern: $DOC.createElement(tagname=$SINK)
              - pattern: $DOC.createElementNS($NS, $SINK)
              - pattern: $DOC.createElementNS(..., tagname=$SINK, ...)
              - pattern: $DOC.createTextNode($SINK)
              - pattern: $DOC.createTextNode(..., data=$SINK, ...)
              - pattern: $DOC.createAttribute($SINK)
              - pattern: $DOC.createAttribute(name=$SINK)
              - pattern: $DOC.createAttributeNS($NS, $SINK)
              - pattern: $DOC.createAttributeNS(..., qualifiedName=$SINK, ...)
        requires: __SOURCE__ and DOM_DOCUMENT
      - patterns:
          - pattern-either:
              - pattern: $ELEMENT.setAttribute(..., $SINK, ...)
              - pattern: $ELEMENT.setAttribute(..., name=$SINK, ...)
              - pattern: $ELEMENT.setAttribute(..., value=$SINK, ...)
              - pattern: $ELEMENT.setAttributeNS($NS, ..., $SINK, ...)
              - pattern: $ELEMENT.setAttributeNS(..., qname=$SINK, ...)
              - pattern: $ELEMENT.setAttributeNS(..., value=$SINK, ...)
        requires: __SOURCE__ and DOM_ELEMENT
      - patterns:
          - pattern-either:
              - pattern: $READER.parse($SINK, ...)
              - pattern: $READER.parse(..., source=$SINK, ...)
              - pattern: $READER.feed($SINK, ...)
              - pattern: $READER.feed(..., data=$SINK, ...)
              - pattern: $READER.prepareParser($SINK, ...)
              - pattern: $READER.prepareParser(..., source=$SINK, ...)
              - pattern: $READER.parseFile($SINK, ...)
              - pattern: $READER.parseFile(..., file=$SINK, ...)
              - pattern: $READER.parseString($SINK, ...)
              - pattern: $READER.parseString(..., string=$SINK, ...)
        requires: __SOURCE__ and SAX_PARSER
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: int(...)
              - pattern: bool(...)
              - pattern: float(...)
              - pattern: complex(...)
              - pattern: oct(...)
              - pattern: hex(...)
              - pattern: bin(...)
              - pattern: round(...)
              - pattern: id(...)
              - pattern: hash(...)
              - pattern: len(...)
              - pattern: type(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $DICT[$KEY]
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE for ... in ...}
                  ...
              - pattern-inside: |
                  $DICT.get($KEY, $DEFAULT)
                  ...
              - pattern-inside: |
                  $DICT = { }
                  ...
              - pattern-inside: |
                  $DICT = { $KEY: $VALUE, ... }
                  ...
              - pattern-inside: |
                  $DICT = dict(...)
                  ...
          - pattern-either:
              - pattern: $DICT.clear()
              - pattern: $DICT.len()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $LIST = [ ... ]
                  ...
              - pattern-inside: |
                  $LIST = list(...)
                  ...
          - pattern-either:
              - pattern: $LIST.clear()
              - pattern: $LIST.count(...)
              - pattern: $LIST.index(...)
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.len()
              - pattern: $SET.clear()
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $SET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $SET = { $ITEM for ... in ...}
                  ...
              - pattern-inside: |
                  $SET = set(...)
                  ...
              - pattern-inside: |
                  $SET = frozenset(...)
                  ...
              - pattern-inside: |
                  $OTHERSET = { $ITEM, ... }
                  ...
              - pattern-inside: |
                  $OTHERSET = set(...)
                  ...
          - pattern-either:
              - pattern: $SET.isdisjoint($OTHERSET)
              - pattern: $SET.difference($OTHERSET)
              - pattern: $SET.issubset($OTHERSET)
              - pattern: $SET < $OTHERSET
              - pattern: $SET <= $OTHERSET
              - pattern: $SET.issuperset($OTHERSET)
              - pattern: $SET > $OTHERSET
              - pattern: $SET >= $OTHERSET
      - patterns:
          - pattern-either:
              - pattern-inside: |
                  $TUPLE = ( $ITEM, ... )
                  ...
              - pattern-inside: |
                  $TUPLE = $ITEM, ...
                  ...
              - pattern-inside: |
                  $TUPLE = tuple(...)
                  ...
          - pattern-either:
              - pattern: $TUPLE.len()
      - pattern: django.shortcuts.get_object_or_404(...)
      - pattern: django.shortcuts.get_list_or_404(...)
